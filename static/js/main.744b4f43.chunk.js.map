{"version":3,"sources":["components/Header/Header.js","components/LandingPage/LandingPageHero.js","components/LandingPage/HowItWorks.js","components/LandingPage/GetStarted.js","components/LandingPage/LandingPage.js","components/HomePage/HomePageNav.js","components/HomePage/HomePageDisplay.js","contexts/UserDataContext.js","components/HomePage/HomePage.js","components/RecipePage/RecipeDisplay.js","components/RecipePage/RecipeButtons.js","components/RecipePage/ReviewForm.js","components/RecipePage/ReviewBox.js","components/RecipePage/RecipePage.js","components/CreatePage/RecipeBox2.js","contexts/IngredientsDataContext.js","components/CreatePage/Accordion.js","components/CreatePage/AddNewIngredient.js","components/CreatePage/CreatePage2.js","helpers.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/NotFoundPage/NotFoundPage.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["Header","className","to","Component","LandingPageHero","HowItWorks","src","alt","GetStarted","LandingPage","classFor","section","currentSection","HomePageNav","this","props","HomePageDisplay","state","numberOfSmoothies","loadMoreSmoothies","setState","data","recipeData","map","d","i","key","id","smoothiePicture","smoothieName","onClick","favorite","pathname","prepopulate","customId","reviewOn","UserDataContext","React","createContext","userData","recipes","reviews","recipesForUser","favoriteRecipes","findRecipe","findReviews","insertNewRecipe","handleReviewSubmit","toggleFavorites","UserDataProvider","userName","userId","recipe","recipeId","headline","review","userFavorites","recipeStrings","newRecipe","prevState","unshift","concat","favoritesArray","find","f","removeItemArray","filter","push","r","includes","value","reviewsData","Provider","children","HomePage","handleFavorite","context","contextType","RecipeDisplay","match","RecipeButtons","click","ReviewForm","event","preventDefault","target","handleSubmitTernary","showThanks","onSubmit","htmlFor","type","placeholder","size","name","required","rows","cols","ReviewBox","length","RecipePage","handleReviewButtonClick","showForm","location","params","split","Number","RecipeBox2","handleRecipeSubmit","title","recipeProps","e","deleteStringItem","withRouter","IngredientsDataContext","ingredientsData","addNewIngredient","IngredientsDataProvider","category","ingredients","itemCategory","itemName","targetCategoryIndex","findIndex","ingredient","Accordion","handleAddRecipeItem","ingredientName","recipeString","amount","units","stringDisplay","openCategory","changeAccordion","AddNewIngredient","handleAddNewItem","newItemCategory","newItemName","CreatePage2","showNewItemForm","displayRecipeStrings","newRecipeStrings","findLogin","username","password","user","userPassword","LoginPage","onLogin","RegisterPage","onRegister","desiredUsername","desiredPassword","console","log","NotFoundPage","class","Footer","App","exact","path","component","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.744b4f43.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.css'\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className='Header'>\n                <h1>\n                    <Link to='/'>\n                    Smoothie.io\n                    </Link>\n                </h1>\n                <div className='Header__Menu'>\n                    <span>\n                        <Link to='/login'>\n                            login\n                        </Link>\n                    </span>\n                    <span>\n                        <Link to='/register'>\n                            register\n                        </Link>\n                    </span>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Header","import React, { Component } from 'react'\nimport './LandingPage.css'\n\nclass LandingPageHero extends Component {\n    render() {\n        return (\n            <header className=\"LandingPage__Hero\">\n                <h1>Create the perfect smoothie.</h1>\n                <h2>Smoothie.io gives you amazing smoothie recipes that you can completely customize. You can also build your own from scratch and share them with the world!</h2>\n            </header>\n        )\n    }\n}\n\nexport default LandingPageHero","import React, { Component } from 'react'\nimport './LandingPage.css'\n\nclass HowItWorks extends Component {\n    render() {\n        return (\n            <section className=\"LandingPage__HowItWorks\">\n                <h3>How it works</h3>\n                <div className=\"LandingPage__HowItWorks__Box\">\n                    <img \n                        src=\"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\" \n                        alt=\"delicious green smoothie surrounded by fruit and kale\"\n                    />\n                    <ul>\n                        <li>Browse through the list of recipes submitted by our users</li>\n                        <li>Choose to \"favorite\" it, review it, or customize it</li>\n                        <li>You can also create a recipe from scratch</li>\n                        <li>Once your done you can publish it so others can enjoy it</li>\n                    </ul>\n                </div> \n            </section>\n        )\n    }\n}\n\nexport default HowItWorks","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './LandingPage.css'\n\nclass GetStarted extends Component {\n    render() {\n        return (\n            <section className=\"LandingPage__GetStarted\">\n                <h3>Get started</h3>\n                <div className=\"LandingPage__GetStarted__Box\">\n                    <h4>\n                        <Link to='/register'>\n                            Register\n                        </Link>\n                    </h4>\n                    <h4>\n                        <Link to='/login'>\n                            Login\n                        </Link>\n                    </h4>\n                    <h4>\n                        <Link to='/home'>\n                            Go to the app\n                        </Link>\n                    </h4>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default GetStarted","import React, { Component } from 'react'\nimport LandingPageHero from './LandingPageHero'\nimport HowItWorks from './HowItWorks'\nimport GetStarted from './GetStarted'\nimport './LandingPage.css'\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div className=\"LandingPage\">\n                <main className=\"LandingPage__Main\">\n                    <LandingPageHero />\n                    <HowItWorks />\n                    <GetStarted />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './HomePage.css'\n\nfunction classFor(section, currentSection) {\n  if (section !== currentSection)\n    return \"homeNotActive\";\n  else\n    return \"homeActive\";\n}\n\nclass HomePageNav extends Component {\n    render() {\n        return (\n            <div className=\"HomePage__HomeDisplay__Nav\">\n                <ul>\n                    <li>\n                        <Link to='/home' className={classFor('all', this.props.section)}>\n                            All Recipes\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/home/favorites' className={classFor('favorites', this.props.section)}>\n                            Favorites\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/home/my-recipes' className={classFor('user', this.props.section)}>\n                            My Recipes\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default HomePageNav","import React, { Component } from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport HomePageNav from './HomePageNav'\nimport './HomePage.css'\n\nclass HomePageDisplay extends Component {\n    state = {\n        numberOfSmoothies: 6\n    }\n\n    loadMoreSmoothies = () => {\n        let { numberOfSmoothies } = this.state\n        this.setState({\n            numberOfSmoothies: numberOfSmoothies += 6\n        })\n    }\n\n    render() {\n        const data = this.props.recipeData\n        const { numberOfSmoothies } = this.state\n        return (\n            <>\n                <section className=\"HomePage__HomeDisplay\">\n                    <HomePageNav section={this.props.section} />\n                    <div className=\"HomePage__HomeDisplay__FlexBox\">\n                        {data.map((d, i) => {\n                            if(i < numberOfSmoothies) {\n                                return <div className=\"HomePage__HomeDisplay__FlexBox__Item\" key={d.id}>\n                                    <Link to={`/recipe/${d.id}`}>\n                                        {d.smoothiePicture\n                                            ?(\n                                                <img \n                                                    src={`${d.smoothiePicture}`} \n                                                    alt={`a smoothie named ${d.smoothieName}`}\n                                                />\n                                            )\n                                            :(\n                                                <img \n                                                    src=\"https://i.ibb.co/VSS1v7M/smoothie-art-png-tiny.png\"\n                                                    alt={`a smoothie named ${d.smoothieName}`}\n                                                />\n                                            )\n                                        }\n                                    </Link>\n                                    <div className=\"Item__Controls\">\n                                        <h3 className=\"CardTitle\">\n                                            <Link to={`/recipe/${d.id}`}>\n                                                {d.smoothieName}\n                                            </Link>\n                                        </h3>\n                                        <button\n                                            onClick={() => this.props.favorite(d.id)}\n                                        >\n                                            favorite\n                                        </button>\n                                        <button>\n                                            <Link to={{\n                                                pathname: `/create`,\n                                                prepopulate: true,\n                                                customId: `${d.id}`\n                                            }}>\n                                                customize\n                                            </Link>\n                                        </button>\n                                        <button>\n                                            <Link to={{\n                                                    pathname: `/recipe/${d.id}#ReviewForm`,\n                                                    reviewOn: true\n                                            }}>\n                                                review\n                                            </Link>\n                                        </button>\n                                    </div>\n                                </div>\n                            }\n                        })}\n                    </div> \n                </section>\n                <section className=\"HomePage__BottomButtons\">\n                    <div className=\"HomePage__BottomButtons__FlexBox\">\n                        <div className=\"BottomButton__More\">\n                            <button onClick={this.loadMoreSmoothies}>more smoothies</button>\n                        </div>\n                        <div className=\"BottomButton__Create\">\n                            <button>\n                                <Link to =\"/create\">\n                                    create a smoothie\n                                </Link>\n                            </button>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default HomePageDisplay","import React, { Component } from 'react'\n\nconst UserDataContext = React.createContext({\n    userData: [],\n    recipes: [],\n    reviews: [],\n    recipesForUser: () => {},\n    favoriteRecipes: () => {},\n    findRecipe: id => {},\n    findReviews: id => {},\n    insertNewRecipe: () => {},\n    handleReviewSubmit: () => {},\n    toggleFavorites: () => {}\n})\n\nexport default UserDataContext\n\nexport class UserDataProvider extends Component {\n    state = {\n        recipes: [\n                {\n                    id: 1,\n                    smoothieName: \"Green Machine\",\n                    smoothiePicture: \"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\",\n                    userName: \"greenguru\",\n                    userId: 1,\n                    recipe: [\n                        \"6 leaves romaine lettuce\",\n                        \"4 leaves kale\",\n                        \"1 cup pineapple\",\n                        \"1 cup mango\",\n                        \"1 oz ginger\",\n                        \"11 cups water\",\n                    ],\n                },\n                {\n                    id: 2,\n                    smoothieName: \"Whey Protein Breakfast Blast\",\n                    smoothiePicture: \"https://i.ibb.co/s1bRR5Q/whey-protein-breakfast-blast.jpg\",\n                    userName: \"greenguru\",\n                    userId: 1,\n                    recipe: [\n                        \"1 cup blueberries\",\n                        \"1/2 whole banana\",\n                        \"1 scoop whey\",\n                        \"2 teaspoons honey\",\n                        \"1 teaspoon vanilla extract\",\n                        \"1 cup ice cubes\",\n                        \"1 tablespoon flax seed\",\n                    ]\n                },\n                {\n                    id: 3,\n                    smoothieName: \"Sunrise Breakfast Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/Lt2MPNz/sunrise-breakfast-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"1 whole carrot\",\n                        \"1 whole banana\",\n                        \"1 scoop whey\",\n                        \"3/4 cup raspberries\",\n                        \"1/2 cup yogurt\",\n                        \"1/2 cup almond milk\",\n                        \"1 whole orange\",\n                        \"1/4 cup rolled oats\",\n                    ]\n                },\n                {\n                    id: 4,\n                    smoothieName: \"Mango Mint Green Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/84hwRZD/mango-mint-green-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"2 cups spinach\",\n                        \"1 1/2 cups ice\",\n                        \"1 cup almond milk\",\n                        \"1/2 cup mint leaves\",\n                        \"1/4 cup lime juice\",\n                        \"1 whole mango\",\n                        \"1 whole banana\",\n                    ],\n                },\n                {\n                    id: 5,\n                    smoothieName: \"Pineapple Breeze\",\n                    smoothiePicture: \"https://i.ibb.co/3zL80TX/pineapple-breeze-smoothie.jpg\",\n                    userName: \"greenguru\",\n                    userId: 1,\n                    recipe: [\n                        \"1 cup pineapple\",\n                        \"1/2 cup pineapple juice\",\n                        \"2/3 cup coconut milk\",\n                        \"3 cups ice cubes\",\n                    ]\n                },\n                {\n                    id: 6,\n                    smoothieName: \"Sunny Citrus Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/0Cnh663/sunny-citrus-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"1 whole orange\",\n                        \"1 whole lemon\",\n                        \"1 whole grapefruit\",\n                        \"3/4 cup yogurt\",\n                        \"2 tablespoons honey\",\n                        \"1/2 cup ice cubes\",\n                    ]\n                },\n                {\n                    id: 7,\n                    smoothieName: \"Blueberry Muffin Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/9gVL05J/blueberry-muffin-smoothie.jpg\",\n                    userName: \"greenguru\",\n                    userId: 1,\n                    recipe: [\n                        \"1/2 cup orange juice\",\n                        \"1 cup blueberries\",\n                        \"1/2 cup rolled oats\",\n                        \"2 tablespoons flaxseed oil\",\n                        \"1/2 teaspoon cinnamon\",\n                        \"1/2 cup ice cubes\",\n                        \"1/2 cup soy milk\",\n                    ]\n                },\n                {\n                    id: 8,\n                    smoothieName: \"Strawberry Almond Butter Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/TtLpgnD/strawberry-alomnd-butter-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"1 cup ice cubes\",\n                        \"8 ounces strawberries\",\n                        \"1 cup almond milk\",\n                        \"2 tablespoons almond butter\",\n                    ]\n                },\n                {\n                    id: 9,\n                    smoothieName: \"Chocolate-Almond Banana Smoothie\",\n                    smoothiePicture: \"https://i.ibb.co/cFSYMfL/chcolate-almond-banana-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"1 whole banana\",\n                        \"1 cup almond milk\",\n                        \"1 tablespoon almond butter\",\n                        \"1 tablespoon cocoa\",\n                    ]\n                },\n                {\n                    id: 10,\n                    smoothieName: \"Get Your Greens\",\n                    smoothiePicture: \"https://i.ibb.co/RyGtZXJ/get-your-greens-smoothie.jpg\",\n                    userName: \"wholefoodie\",\n                    userId: 2,\n                    recipe: [\n                        \"1 1/2 cup rice milk\",\n                        \"1 1/2 cup spinach\",\n                        \"1/2 cup blueberries\",\n                        \"1/2 cup raspberries\",\n                        \"1/2 cup cherries\",\n                        \"1 cup ice cubes\"\n                    ]\n                }\n        ],\n        reviews: [\n          {\n            recipeId: 1,\n            userName: \"Bloop\",\n            userId: 10,\n            headline: \"It was bloop!\",\n            review: \"Bloop bloop bloopity bloop.\"\n          },\n          {\n            recipeId: 1,\n            userName: \"Fruity\",\n            userId: 11,\n            headline: \"Delish\",\n            review: \"Blah blah blah.\"\n          },\n          {\n            recipeId: 2,\n            userName: \"Lue\",\n            userId: 12,\n            headline: \"Yum\",\n            review: \"Tastes like fruit.\"\n          },\n          {   \n            recipeId: 3,\n            userName: \"Brendan\",\n            userId: 33,\n            headline: \"Crunchy\",\n            review: \"Had a weird crunch to it.\"\n          }\n        ],\n        userData: \n            {\n                id: 1,\n                userName: \"greenguru\",\n                userFavorites: [1, 3, 5]\n            }\n        \n    }\n\n    findRecipe(id) {\n      return this.state.recipes.find(r => r.id === id);\n    }\n\n    findReviews(id) {\n      return this.state.reviews.filter(r => r.recipeId === id);\n    }\n\n    recipesForUser() {\n      const { recipes, userData } = this.state;\n      return recipes.filter(r => r.userId === userData.id)\n    }\n\n    favoriteRecipes() {\n      const { recipes, userData } = this.state;\n      return recipes.filter(r => userData.userFavorites.includes(r.id));\n    }\n\n    insertNewRecipe = (smoothieName, recipeStrings, userName, userId, recipeId) => {\n        const newRecipe = \n            {\n                id: recipeId,\n                smoothieName: smoothieName,\n                userName: userName,\n                userId: userId,\n                recipe: recipeStrings\n            }\n        this.setState(prevState => {\n            const { recipes } = prevState\n            recipes.unshift(newRecipe)\n            return { recipes }\n        })\n    }\n\n    handleReviewSubmit = (headline, review, recipeId, userName, userId) => {\n        const reviews = this.state.reviews\n        this.setState({ reviews: reviews.concat(\n            {\n                recipeId: recipeId,\n                userName: userName,\n                userId: userId,\n                headline: headline,\n                review: review \n            }\n        )})\n    }\n\n    toggleFavorites = (recipeId) => {\n        const favoritesArray = this.state.userData.userFavorites\n        if (favoritesArray.find(f => f === recipeId)) {\n            const removeItemArray = favoritesArray.filter(f => f !== recipeId)\n            this.setState({ userData: {userFavorites: removeItemArray} })\n        } else {\n            favoritesArray.push(recipeId)\n        }\n    }\n\n    render() {\n        const value = {\n            userData: this.state.userData,\n            recipeData: this.state.recipes,\n            reviewsData: this.state.reviews,\n            favoriteRecipes: () => this.favoriteRecipes(),\n            recipesForUser: () => this.recipesForUser(),\n            findRecipe: id => this.findRecipe(id),\n            findReviews: id => this.findReviews(id),\n            insertNewRecipe: this.insertNewRecipe,\n            handleReviewSubmit: this.handleReviewSubmit,\n            toggleFavorites: this.toggleFavorites\n        }\n\n        return (\n            <UserDataContext.Provider value={value}>\n                {this.props.children}\n            </UserDataContext.Provider>\n        )\n    }\n}","import React, { Component } from 'react'\nimport HomePageDisplay from './HomePageDisplay'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './HomePage.css'\n\nclass HomePage extends Component {\n\n  static contextType = UserDataContext\n\n  handleFavorite = (recipeId) => {\n    this.context.toggleFavorites(recipeId)\n  }\n\n    render() {\n        const section = this.props.section || \"all\";\n        let recipes;\n        switch (section) {\n          case 'favorites':\n            recipes = this.context.favoriteRecipes();\n            break;\n\n          case \"user\":\n            recipes = this.context.recipesForUser();\n            break;\n\n          default:\n            recipes = this.context.recipeData;\n        }\n\n        return (\n            <div className=\"HomePage\">\n                <main className=\"HomePage__Main\">\n                    <HomePageDisplay \n                      recipeData={recipes} \n                      section={section}\n                      favorite={this.handleFavorite}\n                    />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default HomePage","import React, { Component } from 'react'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './RecipePage.css'\n\nclass RecipeDisplay extends Component {\n    static contextType = UserDataContext\n    render() {\n        const recipe = this.props.match\n        return (\n            <section className=\"RecipePage__RecipeDisplay\">\n                <h1>{recipe.smoothieName}</h1>\n                <h3>made by {recipe.userName}</h3>\n                <div className=\"RecipePage__RecipeDisplay__FlexBox\">\n                    <img \n                        src=\"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\" \n                        alt=\"delicious green smoothie surrounded by fruit and kale\"\n                    />\n                    <div className=\"RecipeBox\">\n                        <h3>Recipe</h3>\n                            <ul>\n                                {recipe.recipe.map(r => \n                                    <li key={r}>{r}</li>\n                                )}\n                            </ul>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default RecipeDisplay","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './RecipePage.css'\n\nclass RecipeButtons extends Component {\n\n    render() {\n        const recipe = this.props.match\n        return (\n            <section className=\"RecipePage__BottomButtons\">\n                <div className=\"RecipePage__BottomButtons__FlexBox\">\n                    <button\n                        onClick={() => this.props.favorite(recipe.id)}\n\n                    >\n                        favorite\n                    </button>\n                    <button>\n                        <Link to={{\n                            pathname: `/create`,\n                            prepopulate: true,\n                            customId: `${recipe.id}`\n                        }}>\n                            customize\n                        </Link>\n                    </button>\n                    <button\n                        onClick={this.props.click}\n                    >\n                        review\n                    </button>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default RecipeButtons","import React, { Component } from 'react'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './RecipePage.css'\n\nclass ReviewForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showThanks: false\n        }\n    }\n\n    static contextType = UserDataContext\n\n    handleReviewSubmit = (event) => {\n        event.preventDefault();\n        const headline = event.target.headline.value\n        const review = event.target.review.value\n        const recipeId = this.props.match.id\n        const userName = this.context.userData.userName\n        const userId = this.context.userData.id\n        this.context.handleReviewSubmit(headline, review, recipeId, userName, userId)\n        this.handleSubmitTernary();\n    }\n\n    handleSubmitTernary = (event) => {\n        const showThanks = this.state.showThanks\n        this.setState({\n            showThanks: !showThanks\n        })\n    }\n\n    render() {\n        const showThanks = this.state.showThanks\n        return (\n            <section className=\"RecipePage__ReviewForm\" id=\"ReviewForm\">\n                {showThanks\n                    ? (\n                        <div className=\"TernaryBox\">\n                            <h3>Thanks!</h3>\n                            <h5>We appriciate your review.</h5>\n                        </div>\n                    )\n                    : (\n                        <form onSubmit={this.handleReviewSubmit}>\n                            <label htmlFor=\"headline\">\n                                Add a headline\n                            </label>\n                            <br/>\n                            <input\n                                type=\"text\"\n                                placeholder=\"What's most important to know?\"\n                                size=\"33\"\n                                name=\"headline\"\n                                id=\"headline\"\n                                required\n                            />\n                            <br/>\n                            <label htmlFor=\"review\">\n                                Write your review\n                            </label>\n                            <br/>\n                            <textarea\n                                placeholder='Was this smoothie \"yay\" or \"nay\"? Why?'\n                                rows=\"10\"\n                                cols=\"50\"\n                                name=\"review\"\n                                id=\"review\"\n                                required\n                            />\n                            <br/>\n                            <button>submit</button>\n                        </form>\n                    )\n                }\n            </section>\n        )\n    }\n}\n\nexport default ReviewForm","import React, { Component } from 'react'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './RecipePage.css'\n\nclass ReviewBox extends Component {\n    static contextType = UserDataContext\n    render() {\n        const reviews = this.props.match\n        return (\n            <section className=\"RecipePage__ReviewsBox\">\n                <h3>Reviews</h3>\n                {reviews.length === 0\n                    ? (\n                        <div className=\"TernaryBox\">\n                            <h3>No reviews yet</h3>\n                            <h5>Be the first to leave a review!</h5>\n                            <button onClick={this.props.click}>review</button>\n                        </div>\n                    )\n                    : (\n                        reviews.map(r => \n                            <div className=\"IndividualReviewBox\" key={r.headline}>\n                                <div className=\"IndividualReviewBox__User\">\n                                    <img\n                                        src=\"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\"\n                                        alt=\"delicious green smoothie surrounded by fruit and kale\"\n                                    />\n                                    <span>{r.userName}</span>\n                                </div>\n                                <div className=\"IndividualReviewBox__Review\">\n                                    <h4>\"{r.headline}\"</h4>\n                                    <span>\"{r.review}\"</span>\n                                </div>\n                            </div>\n                        )\n                    )\n                }\n            </section>\n        )\n    }\n}\n\nexport default ReviewBox","import React, { Component } from 'react'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport RecipeDisplay from './RecipeDisplay'\nimport RecipeButtons from './RecipeButtons'\nimport ReviewForm from './ReviewForm'\nimport ReviewBox from './ReviewBox'\nimport './RecipePage.css'\n\nclass RecipePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showForm: this.props.location.reviewOn ? this.props.location.reviewOn : false\n        }\n    }\n\n    static contextType = UserDataContext\n\n    handleFavorite = (recipeId) => {\n        this.context.toggleFavorites(recipeId)\n    }\n\n    handleReviewButtonClick = (event) => {\n        const showForm = this.state.showForm\n        this.setState({\n            showForm: !showForm\n        })\n    }\n\n    render() {\n        const [id] = this.props.match.params.recipeId.split('#');\n        const recipe = this.context.findRecipe(Number(id));\n        const reviews = this.context.findReviews(Number(id));\n        return (\n            <div className=\"RecipePage\">\n                <main className=\"RecipePage__Main\">\n                    <RecipeDisplay match={recipe}/>\n                    <RecipeButtons match={recipe} \n                        click={this.handleReviewButtonClick}\n                        favorite={this.handleFavorite}\n                    />\n                    {this.state.showForm &&\n                        <ReviewForm match={recipe}/>\n                    }\n                    <ReviewBox match={reviews}\n                        click={this.handleReviewButtonClick}\n                    />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default RecipePage","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './CreatePage.css'\n\nclass RecipeBox2 extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            prepopulate: this.props.location.prepopulate ? this.props.location.prepopulate : false\n        }\n    }\n\n    static contextType = UserDataContext\n\n    handleRecipeSubmit = (event) => {\n        event.preventDefault();\n        const smoothieName = event.target.title.value\n        const userName = this.context.userData.userName\n        const userId = this.context.userData.id\n        const recipeId = 12321\n        const recipeStrings = this.props.recipeProps\n        this.context.insertNewRecipe(smoothieName, recipeStrings, userName, userId, recipeId)\n    }\n\n    render () {\n        const prepopulate = this.props.location.prepopulate\n        const recipeStrings = this.props.recipeProps\n        const id = this.props.location.customId\n        const recipe = this.context.findRecipe(Number(id));\n        return (\n            <form \n                onSubmit={this.handleRecipeSubmit}\n                className=\"RecipeForm\"\n            >\n                <div className=\"RecipeTitle\">\n                    <label htmlFor=\"title\"></label>\n                    {prepopulate\n                        ? (\n                            <input \n                                type=\"text\"\n                                placeholder={recipe.smoothieName}\n                                name=\"title\"\n                                id=\"title\"\n                                required\n                            />\n                        )\n                        : (\n                            <input \n                                type=\"text\"\n                                placeholder=\"My Awesome Smoothie\"\n                                name=\"title\"\n                                id=\"title\"\n                                required\n                            />\n                        )\n                    }\n                    <br/>\n                    Name your smoothie!\n                </div>\n                <div className=\"Recipe__Box\">\n                    {recipeStrings.map(r => \n                        <div className=\"Recipe__Item\" key={r}>\n                            <h3>{r}</h3>\n                            <button \n                                onClick={(e) => this.props.deleteStringItem(e, r)}>\n                                x\n                            </button>\n                        </div>\n                    )}\n                </div>\n                <div className=\"Buttons__Box\">\n                    <button type='submit'>publish</button>\n                </div>           \n            </form>\n        )\n    }\n}\n\nexport default withRouter(RecipeBox2)","import React, { Component } from 'react'\n\nconst IngredientsDataContext = React.createContext({\n    ingredientsData: [],\n    addNewIngredient: () => {}\n})\n\nexport default IngredientsDataContext\n\nexport class IngredientsDataProvider extends Component {\n    state = {\n        ingredientsData: [\n            {\n                id: 1,\n                category: 'fruit',\n                ingredients: [\n                    \"apples\",\n                    \"avocado\",\n                    \"bananas\",\n                    \"blueberries\",\n                    \"cherries\",\n                    \"cucumber\",\n                    \"grapes\",\n                    \"grapefruit\",\n                    \"lemon\",\n                    \"lime\",\n                    \"mango\",\n                    \"papaya\",\n                    \"peaches\",\n                    \"pears\",\n                    \"pineapple\",\n                    \"raspberries\",\n                    \"strawberries\",\n                ]\n            },\n            {\n                id: 2,\n                category: 'vegetables',\n                ingredients: [\n                    \"beets\",\n                    \"broccoli\",\n                    \"carrots\",\n                    \"carrot tops\",\n                    \"chard\",\n                    \"celery\",\n                    \"kale\",\n                    \"romaine lettuce\",\n                    \"spinach\",\n                ]\n            },\n            {\n                id: 3,\n                category: 'nuts & seeds',\n                ingredients: [\n                    'almonds',\n                    'almond butter',\n                    'cashews',\n                    'cashew butter',\n                    'chia seeds',\n                    'flax seed',\n                    'peanuts',\n                    'peanut butter',\n                    'walnuts',\n                ]\n            },\n            {\n                id: 4,\n                category: 'liquids',\n                ingredients: [\n                    \"almond milk\",\n                    \"cashew milk\",\n                    \"coconut milk\",\n                    \"coconut water\",\n                    \"hemp milk\",\n                    \"milk\",\n                    \"oat milk\",\n                    \"orange juice\",\n                    \"pineapple juice\",\n                    \"soy milk\",\n                    \"water\",\n                ]\n            },\n            {\n                id: 5,\n                category: 'powders',\n                ingredients: [\n                    \"cacao\",\n                    \"cinnamon\",\n                    \"greens powder\",\n                    \"maca\",\n                    \"pea protein\",\n                    \"rice protein\",\n                    \"soy protein\",\n                    \"turmeric\",\n                    \"whey protein\"\n                ]\n            },\n            {\n                id: 6,\n                category: 'sweeteners',\n                ingredients: [\n                    \"blue agave\",\n                    \"coconut sugar\",\n                    \"honey\",\n                    \"maple syrup\",\n                    \"monk fruit\",\n                    \"stevia\",\n                    \"xylitol\"\n                ]\n            },\n            {\n                id: 7,\n                category: 'miscellaneous',\n                ingredients: [\n                    \"cacao nibs\",\n                    \"chocolate, dark\",\n                    \"chocolate, milk\",\n                    \"coconut oil\",\n                    \"flaxseed oil\",\n                    \"ginger\",\n                    \"granola\",\n                    \"ice cubes\",\n                    \"lemon juice\",\n                    \"lime juice\",\n                    \"mint leaves\",\n                    \"rolled oats\",\n                    \"vanilla extract\",\n                    \"yogurt\"\n                ]\n            }\n        ]\n    }\n\n    addNewIngredient = (itemCategory, itemName) => {\n        const { ingredientsData } = this.state\n        const targetCategoryIndex = ingredientsData.findIndex(ingredient => ingredient.category === itemCategory)\n        this.setState(prevState => {\n            const { ingredientsData } = prevState\n            const targetCategory = ingredientsData[targetCategoryIndex]\n            targetCategory.ingredients.push(itemName)\n            return { ingredientsData }      \n        })\n    }\n\n    render() {\n        const value = {\n            ingredientsData: this.state.ingredientsData,\n            addNewIngredient: this.addNewIngredient\n        }\n\n        return (\n            <IngredientsDataContext.Provider value={value}>\n                {this.props.children}\n            </IngredientsDataContext.Provider>\n        )\n    }\n}","import React, { Component } from 'react'\nimport IngredientsDataContext from '../../contexts/IngredientsDataContext'\nimport './CreatePage.css'\n\nclass Accordion extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openCategory: null,\n        }\n    }\n    \n    static contextType = IngredientsDataContext\n\n    changeAccordion(event, id) {\n        event.preventDefault();\n        if (id === this.state.openCategory) {\n          this.setState({ openCategory: null })\n        } else {\n          this.setState({ openCategory: id })\n        } \n    }\n\n    handleAddRecipeItem = (event) => {\n        event.preventDefault();\n        const ingredientName = event.target.ingredient.value\n        const ingredientAmount = event.target.amount.value\n        const ingredientUnits = event.target.units.value\n        const recipeString = ingredientAmount + ' ' + ingredientUnits + ' ' + ingredientName\n        this.props.stringDisplay(recipeString)\n    }\n\n    render () {\n        const { openCategory } = this.state;\n        const data = this.context.ingredientsData\n        return (\n            <div className=\"Ingredients__Box\">\n                <h3>Pick your ingreditents</h3>\n                <div className=\"Ingredients__List\">\n                    {data.map(d => \n                        <div className=\"Ingredients__Category\" key={d.id}>\n                            <h4>\n                                <button onClick={event => this.changeAccordion(event, d.id)}>\n                                    {d.category}\n                                </button>\n                            </h4>\n                            {d.id === openCategory &&\n                                d.ingredients.map(i => \n                                    <div className=\"Ingredients__Item\" key={i}>\n                                        <form onSubmit={this.handleAddRecipeItem}>\n                                            <span>{i}</span>\n                                            <input\n                                                type=\"hidden\"\n                                                name=\"ingredient\"\n                                                id=\"ingredient\"\n                                                value={i}\n                                            />\n                                            <input\n                                                name=\"amount\"\n                                                id=\"amount\"\n                                                type=\"text\"\n                                                placeholder=\"amount\"\n                                                size=\"6\"\n                                                required\n                                            />\n                                            <input\n                                                name=\"units\"\n                                                id=\"units\"\n                                                type=\"text\"\n                                                placeholder=\"units\"\n                                                size=\"4\"\n                                            />\n                                            <button>add</button>\n                                        </form>\n                                    </div>\n                                )}   \n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Accordion","import React, { Component } from 'react'\nimport IngredientsDataContext from '../../contexts/IngredientsDataContext'\nimport './CreatePage.css'\n\nclass AddNewIngredient extends Component {\n\n    static contextType = IngredientsDataContext\n\n    handleAddNewItem = (event) => {\n        event.preventDefault();\n        const itemCategory = event.target.newItemCategory.value\n        const itemName = event.target.newItemName.value\n        this.context.addNewIngredient(itemCategory, itemName)\n    }\n\n    render () {\n        const data = this.context.ingredientsData\n        return (\n            <form onSubmit={this.handleAddNewItem}>\n                <label>\n                    Category\n                    <select\n                        name=\"newItemCategory\"\n                    >\n                    {data.map(d =>\n                        <option\n                            value={d.category}\n                        >\n                            {d.category}\n                        </option>\n                    )}\n                    </select>\n                </label>\n                <br/>\n                <label>\n                    Name\n                    <input\n                        name=\"newItemName\"\n                        type=\"text\" \n                        placeholder=\"ie: starfuit\"\n                    />\n                </label>\n                <br/>\n                <button>add</button>\n            </form>\n        )\n    }\n}\n\nexport default AddNewIngredient","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport RecipeBox2 from './RecipeBox2'\nimport Accordion from './Accordion'\nimport AddNewIngredient from './AddNewIngredient'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport './CreatePage.css'\n\nclass CreatePage2 extends Component {\n\nconstructor(props) {\n    super(props)\n    this.state = {\n        recipeStrings: []\n    }\n}\n\nstatic contextType = UserDataContext\n\ncomponentDidMount() {\n    const id = this.props.location.customId\n    if (id) {\n        const recipe = this.context.findRecipe(Number(id));\n        this.setState({ recipeStrings: recipe.recipe })\n    }\n}\n\nshowNewItemForm = (event) => {\n    const showForm = this.state.showForm\n    this.setState({\n        showForm: !showForm\n    })\n}\n\ndisplayRecipeStrings = (recipeString) => {\n    const recipeStrings = this.state.recipeStrings\n    const newRecipeStrings = recipeStrings.concat(recipeString)\n    this.setState({ recipeStrings: newRecipeStrings })\n}\n\ndeleteStringItem = (event, recipeString) => {\n    event.preventDefault();\n    this.setState({\n        recipeStrings: this.state.recipeStrings.filter(r => r !== recipeString)\n    });\n}\n\nrender() {\n    const recipeProps = this.state.recipeStrings\n    return (\n        <div className=\"CreatePage\">\n            <main className=\"CreatePage__Main\">\n                <div className=\"CreatePage__Main__FlexBox\">\n                    <RecipeBox2 \n                        recipeProps={recipeProps} \n                        deleteStringItem={this.deleteStringItem}\n                        displayRecipeStrings={this.displayRecipeStrings}\n                    />\n                    <Accordion \n                        stringDisplay={this.displayRecipeStrings} \n                    />\n                    <div className=\"Ingredients__AddNew\">\n                        <h5>Can't find your favorite ingredient? Click below to add it to our database!</h5>\n                        <button onClick={this.showNewItemForm}>Add new ingredient</button>\n                            {this.state.showForm &&\n                                <AddNewIngredient />\n                            }\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}\n\n}\n\nexport default withRouter(CreatePage2)","export const findRecipe = (userRecipes=[], recipeId) => {\n    return userRecipes.find(recipe => recipe.id === parseInt(recipeId))}\n\nexport const findLogin = (userData=[], username, password) => \n    userData.find(user => user.userName === username && user.userPassword === password)\n\n/*export const registerUser = (userData=[], desiredUsername, desiredPassword) => {\n    if (userData.find(user => user.userName === desiredUsername) {\n        alert('Username is already taken') \n    } else {\n\n    }\n}*/\n\n/*export const findNote = (notes=[], noteId) =>\n    notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n    (!folderId)\n        ? notes\n        : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n    notes.filter(note => note.folderId === folderId).length*/","import React, { Component } from 'react'\nimport UserDataContext from '../../contexts/UserDataContext'\nimport { findLogin } from '../../helpers'\nimport './LoginPage.css'\n\nclass LoginPage extends Component {\n\n    static contextType = UserDataContext\n\n    onLogin = (event) => {\n        event.preventDefault();\n        const username = event.target.username.value\n        const password = event.target.password.value\n        const userData = this.context.userData\n        findLogin(userData, username, password)\n    }\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <main className=\"LoginPage__Main\">\n                    <h1>Login</h1>\n                    <form onSubmit={this.onLogin}>\n                        <label htmlFor=\"username\">\n                            username\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            name=\"username\"\n                            id=\"username\"\n                            required\n                        />    \n                        <br/>\n                        <label htmlFor=\"password\">\n                            password\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            name=\"password\"\n                            id=\"password\"\n                            required \n                        />\n                        <br/>\n                        <button>submit</button>\n                    </form>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage","import React, { Component } from 'react'\nimport './RegisterPage.css'\n\nclass RegisterPage extends Component {\n\n    onRegister = (event) => {\n        event.preventDefault();\n        const desiredUsername = event.target.desiredUsername.value\n        const desiredPassword = event.target.desiredPassword.value\n        console.log(desiredUsername, desiredPassword)\n    }\n\n    render() {\n        return (\n            <div className=\"RegisterPage\">\n                <main className=\"RegisterPage__Main\">\n                    <h1>Register</h1>\n                    <form onSubmit={this.onRegister}>\n                        <label htmlFor=\"desiredUsername\">\n                            desired username\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            name=\"desiredUsername\"\n                            id=\"desiredUsername\"\n                            required\n                        />    \n                        <br/>\n                        <label htmlFor=\"desiredPassword\">\n                            desired password\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            name=\"desiredPassword\"\n                            id=\"desiredPassword\"\n                            required \n                        />\n                        <br/>\n                        <button>submit</button>\n                    </form>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default RegisterPage","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFoundPage.css'\n\nclass NotFoundPage extends Component {\n    render() {\n        return (\n            <div className=\"NotFoundPage\">\n                <main class=\"NotFoundPage__Main\">\n                    <h1>404 Not Found</h1>\n                    <h3>Sorry, this page doesn't exist!</h3>\n                    <button>\n                        <Link to=\"/home\">\n                            home\n                        </Link>\n                    </button>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default NotFoundPage","import React, { Component } from 'react'\nimport './Footer.css'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <nav className='Footer'>\n                <div className='Footer__Menu'>\n                    <span>\n                        © Smoothie.io 2020. All rights reserved.\n                    </span>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Header from '../Header/Header'\nimport LandingPage from '../LandingPage/LandingPage'\nimport HomePage from '../HomePage/HomePage'\nimport RecipePage from '../RecipePage/RecipePage'\nimport CreatePage2 from '../CreatePage/CreatePage2'\nimport LoginPage from '../LoginPage/LoginPage'\nimport RegisterPage from '../RegisterPage/RegisterPage'\nimport NotFoundPage from '../NotFoundPage/NotFoundPage'\nimport Footer from '../Footer/Footer'\nimport './App.css'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App__Header'>\n          <Header />\n        </header>\n        <main className='App__Main'>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            component={LandingPage}\n          />\n          <Route\n            exact\n            path='/home' \n            component={HomePage}\n          />\n          <Route\n            exact\n            path='/home/favorites' \n            render={() => <HomePage section=\"favorites\"/>}\n          />\n          <Route\n            exact\n            path='/home/my-recipes' \n            render={() => <HomePage section=\"user\"/>}\n          />\n          <Route\n            path='/recipe/:recipeId'\n            component={RecipePage}\n          />\n          <Route\n            path='/create'\n            component={CreatePage2}\n          />\n          <Route\n            path='/login'\n            component={LoginPage}\n          />\n          <Route\n            path='/register'\n            component={RegisterPage}\n          />\n          <Route\n            component={NotFoundPage}\n          />\n        </Switch>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserDataProvider } from './contexts/UserDataContext'\nimport { IngredientsDataProvider } from './contexts/IngredientsDataContext'\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/smoothie.io\">\n        <UserDataProvider>\n            <IngredientsDataProvider>\n                <App />\n            </IngredientsDataProvider>\n        </UserDataProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}