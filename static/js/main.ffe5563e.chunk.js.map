{"version":3,"sources":["contexts/SmoothieContext.js","components/Header/Header.js","components/LandingPage/LandingPageHero.js","components/LandingPage/HowItWorks.js","components/LandingPage/GetStarted.js","components/LandingPage/LandingPage.js","components/HomePage/HomePageNav.js","components/HomePage/HomePageDisplay.js","config.js","services/recipes-api-service.js","services/favorites-api-service.js","components/HomePage/HomePage.js","services/reviews-api-service.js","components/RecipePage/RecipeDisplay.js","components/RecipePage/RecipeButtons.js","components/RecipePage/ReviewForm.js","components/RecipePage/ReviewBox.js","components/RecipePage/RecipePage.js","components/CreatePage/RecipeBox.js","services/ingredients-api-service.js","components/CreatePage/Accordion.js","components/CreatePage/AddNewIngredient.js","components/CreatePage/CreatePage.js","services/auth-api-service.js","components/LoginPage/LoginPage.js","components/NotFoundPage/NotFoundPage.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["SmoothieContext","React","createContext","favorites","ingredients","recipe","recipes","reviews","user","favoriteRecipes","updateFavorites","toggleFavorites","updateIngredients","updateRecipe","updateRecipes","findRecipe","id","recipesForUser","updateReviews","findReviews","handleReviewSubmit","logIn","logOut","SmoothieProvider","state","setState","recipeId","favorite","favoritesArray","find","f","recipe_id","removeItemArray","filter","headline","review","userName","userId","concat","event","this","userData","r","userFavorites","includes","user_id","value","Provider","props","children","Component","Header","context","className","icon","faLeaf","to","onClick","contextType","LandingPageHero","HowItWorks","src","alt","GetStarted","LandingPage","classFor","section","currentSection","HomePageNav","SmoothieContex","HomePageDisplay","numberOfSmoothies","loadMoreSmoothies","loginReview","alert","data","map","d","i","key","smoothie_pic","smoothie_name","pathname","prepopulate","customId","reviewOn","RecipesApiService","getRecipes","fetch","config","headers","then","res","ok","json","e","Promise","reject","getRecipe","postRecipe","method","body","JSON","stringify","FavoritesApiService","getFavoritesforUser","postFavorites","HomePage","handleFavorite","result","all","ReviewsApiService","getReviews","postReview","RecipeDisplay","user_name","smoothieData","smoothie","title","quantity","units","RecipeButtons","click","ReviewForm","preventDefault","target","handleSubmitTernary","showThanks","onSubmit","htmlFor","type","placeholder","size","name","required","rows","cols","ReviewBox","user_pic","length","RecipePage","console","log","handleReviewButtonClick","showForm","location","match","params","split","RecipeBox","handleRecipeSubmit","recipeArray","thanks","deleteRecipeLine","withRouter","IngredientsApiService","getIngredients","postIngredient","category","Accordion","handleAddRecipeItem","newRecipeLine","ingredient_id","recipeLineDisplay","openCategory","categories","Set","c","changeAccordion","ingredientsFor","AddNewIngredient","handleAddNewItem","newItemCategory","newItemTitle","ingredientSubmitted","addAnother","CreatePage","showNewItemForm","newRecipeLines","recipeLine","AuthApiService","getUsers","LoginPage","onLogin","password","clickedLogIn","users","u","history","push","NotFoundPage","Footer","App","exact","path","component","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ffe5563e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst SmoothieContext = React.createContext({\n    favorites: [],\n    ingredients: [],\n    recipe: {},\n    recipes: [],\n    reviews: [],\n    user: null,\n    favoriteRecipes: () => {},\n    updateFavorites: () => {},\n    toggleFavorites: () => {},\n    updateIngredients: () => {},\n    updateRecipe: () => {},\n    updateRecipes: () => {},\n    findRecipe: id => {},\n    recipesForUser: id => {},\n    updateReviews: () => {},\n    findReviews: id => {},\n    handleReviewSubmit: () => {},\n    logIn: () => {},\n    logOut: () => {}\n})\n\nexport default SmoothieContext \n\nexport class SmoothieProvider extends Component {\n    state = {\n        favorites: [],\n        ingredients: [],\n        recipe: {},\n        recipes: [],\n        reviews: [],\n        user: null\n    }\n\n    favoriteRecipes() {\n        const { recipes, userData } = this.state;\n        return recipes.filter(r => userData.userFavorites.includes(r.id));\n    }\n\n    updateFavorites = (favorites) => {\n        this.setState({ favorites })\n    }\n\n    toggleFavorites = (recipeId, favorite) => {\n        const favoritesArray = this.state.favorites\n        if (favoritesArray.find(f => f.recipe_id === recipeId)) {\n            const removeItemArray = favoritesArray.filter(f => f.recipe_id !== recipeId)\n            this.setState({ favorites: removeItemArray })\n        } else {\n            this.setState({favorites: [...this.state.favorites, favorite]})\n        }\n    }\n\n    updateIngredients = (ingredients) => {\n        this.setState({ ingredients })\n    }\n\n    updateRecipe = (recipe) => {\n        this.setState({ recipe })\n    }\n\n    updateRecipes = (recipes) => {\n        this.setState({ recipes })\n    }\n\n    findRecipe(id) {\n        return this.state.recipes.find(r => r.id === id);\n    }\n\n    recipesForUser(id) {\n        const { recipes } = this.state;\n        return recipes.filter(r => r.user_id === id)\n    }\n\n    updateReviews = (reviews) => {\n        this.setState({ reviews })\n    }\n\n    findReviews(id) {\n        return this.state.reviews.filter(r => r.recipeId === id);\n    }\n\n    handleReviewSubmit = (headline, review, recipeId, userName, userId) => {\n        const reviews = this.state.reviews\n        this.setState({ reviews: reviews.concat(\n            {\n                recipeId: recipeId,\n                userName: userName,\n                userId: userId,\n                headline: headline,\n                review: review \n            }\n        )})\n    }\n\n    logIn = (user) => {\n        this.setState({ user })\n    }\n\n    logOut = (event) => {\n        this.setState({ user: null })\n    }\n\n    render() {\n        const value = {\n            favorites: this.state.favorites,\n            ingredients: this.state.ingredients,\n            recipe: this.state.recipe,\n            recipes: this.state.recipes,\n            reviews: this.state.reviews,\n            user: this.state.user,\n            favoriteRecipes: () => this.favoriteRecipes(),\n            updateFavorites: this.updateFavorites,\n            toggleFavorites: this.toggleFavorites,\n            updateIngredients: this.updateIngredients,\n            updateRecipe: this.updateRecipe,\n            updateRecipes: this.updateRecipes,\n            findRecipe: id => this.findRecipe(id),\n            recipesForUser: id => this.recipesForUser(id),\n            updateReviews: this.updateReviews,\n            findReviews: id => this.findReviews(id),\n            handleReviewSubmit: this.handleReviewSubmit,\n            logIn: this.logIn,\n            logOut: this.logOut\n        }\n        return (\n            <SmoothieContext.Provider value={value}>\n                {this.props.children}\n            </SmoothieContext.Provider>\n        )\n    }\n\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  static contextType = SmoothieContext;\n\n  logOut = (event) => {\n    this.context.logOut();\n  };\n\n  render() {\n    const user = this.context.user;\n    return (\n      <nav className=\"Header\">\n        <div className=\"Header__Logo\">\n          <div className=\"Icon\">\n            <FontAwesomeIcon icon={faLeaf} />\n          </div>\n          <div className=\"Title\">\n            <h1>\n              <Link to=\"/\">Smoothie.io</Link>\n            </h1>\n          </div>\n        </div>\n        <div className=\"Header__Menu\">\n          <span>\n            {user ? (\n              <Link to=\"/\" onClick={this.logOut}>\n                logout\n              </Link>\n            ) : (\n              <Link to=\"/login\">login</Link>\n            )}\n          </span>\n          <span>\n            <Link to=\"/home\">smoothies</Link>\n          </span>\n          <span>\n            <Link to=\"/create\">create</Link>\n          </span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport './LandingPage.css'\n\nclass LandingPageHero extends Component {\n    render() {\n        return (\n            <header className=\"LandingPage__Hero\">\n                <h1>Create the perfect smoothie.</h1>\n                <h2>Smoothie.io gives you amazing smoothie recipes that you can completely customize. You can also build your own from scratch and share them with the world!</h2>\n            </header>\n        )\n    }\n}\n\nexport default LandingPageHero","import React, { Component } from 'react'\nimport './LandingPage.css'\n\nclass HowItWorks extends Component {\n    render() {\n        return (\n            <section className=\"LandingPage__HowItWorks\">\n                <h3>How it works</h3>\n                <div className=\"LandingPage__HowItWorks__Box\">\n                    <img \n                        src=\"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\" \n                        alt=\"delicious green smoothie surrounded by fruit and kale\"\n                    />\n                    <ul>\n                        <li>Browse through the list of recipes submitted by our users</li><br/>\n                        <li>Choose to \"favorite\" it, review it, or customize it</li><br/>\n                        <li>You can also create a recipe from scratch</li><br/>\n                        <li>Once you've made the perfect recipe, publish it so others can enjoy it</li>\n                    </ul>\n                </div> \n            </section>\n        )\n    }\n}\n\nexport default HowItWorks","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './LandingPage.css'\n\nclass GetStarted extends Component {\n    render() {\n        return (\n            <section className=\"LandingPage__GetStarted\">\n                <h3>Get started</h3>\n                <div className=\"LandingPage__GetStarted__Box\">\n                    <h4>\n                        <Link to='/login'>\n                            Login\n                        </Link>\n                    </h4>\n                    <h4>\n                        <Link to='/home'>\n                            Go to the app\n                        </Link>\n                    </h4>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default GetStarted","import React, { Component } from 'react'\nimport LandingPageHero from './LandingPageHero'\nimport HowItWorks from './HowItWorks'\nimport GetStarted from './GetStarted'\nimport './LandingPage.css'\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div className=\"LandingPage\">\n                <main className=\"LandingPage__Main\">\n                    <LandingPageHero />\n                    <HowItWorks />\n                    <GetStarted />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SmoothieContex from '../../contexts/SmoothieContext'\nimport './HomePage.css'\n\nfunction classFor(section, currentSection) {\n  if (section !== currentSection)\n    return \"homeNotActive\";\n  else\n    return \"homeActive\";\n}\n\nclass HomePageNav extends Component {\n\n    static contextType = SmoothieContex\n\n    render() {\n        const id = this.context.user ? this.context.user.id : 0\n        return (\n            <div className=\"HomePage__HomeDisplay__Nav\">\n                <ul>\n                    {id === 0\n                        ? (\n                            <li>\n                                <Link to='/home' className={classFor('all', this.props.section)}>\n                                    All Recipes\n                                </Link>\n                            </li>\n                        )\n                        : (\n                            <>\n                                <li>\n                                    <Link to='/home' className={classFor('all', this.props.section)}>\n                                        All Recipes \n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/home/favorites' className={classFor('favorites', this.props.section)}>\n                                        Favorites \n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/home/my-recipes' className={classFor('user', this.props.section)}>\n                                        My Recipes \n                                    </Link>\n                                </li>\n                            </>\n                        )\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default HomePageNav","import React, { Component } from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport HomePageNav from './HomePageNav'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport './HomePage.css'\n\nclass HomePageDisplay extends Component {\n    state = {\n        numberOfSmoothies: 6\n    }\n\n    static contextType = SmoothieContext\n\n    loadMoreSmoothies = () => {\n        let { numberOfSmoothies } = this.state\n        this.setState({\n            numberOfSmoothies: numberOfSmoothies += 6\n        })\n    }\n\n    loginReview = () => {\n        alert('Please login to leave a review!')\n    }\n\n    render() {\n        const data = this.props.recipes\n        const { numberOfSmoothies } = this.state\n        const user_id = this.context.user ? this.context.user.id : 0\n        return (\n            <>\n                <section className=\"HomePage__HomeDisplay\">\n                    <HomePageNav section={this.props.section} />\n                    <div className=\"HomePage__HomeDisplay__FlexBox\">\n                        {!data\n                            ? (\n                                <h3>getting recipes...</h3>\n                            )\n                            : (\n                                data.map((d, i) => {\n                                    if(i < numberOfSmoothies) {\n                                        return <div className=\"HomePage__HomeDisplay__FlexBox__Item\" key={d.id}>\n                                            <Link to={`/recipe/${d.id}`}>\n                                                {d.smoothie_pic\n                                                    ?(\n                                                        <img \n                                                            src={`${d.smoothie_pic}`} \n                                                            alt={`a smoothie named ${d.smoothie_name}`}\n                                                        />\n                                                    )\n                                                    :(\n                                                        <img \n                                                            src=\"https://i.ibb.co/VSS1v7M/smoothie-art-png-tiny.png\"\n                                                            alt={`a smoothie named ${d.smoothie_name}`}\n                                                        />\n                                                    )\n                                                }\n                                            </Link>\n                                            <div className=\"Item__Controls\">\n                                                <h3 className=\"CardTitle\">\n                                                    <Link to={`/recipe/${d.id}`}>\n                                                        {d.smoothie_name}\n                                                    </Link>\n                                                </h3>\n                                                <button\n                                                    onClick={() => this.props.favorite(d.id)}\n                                                >\n                                                    favorite\n                                                </button>\n                                                <button>\n                                                    <Link to={{\n                                                        pathname: `/create`,\n                                                        prepopulate: true,\n                                                        customId: `${d.id}`\n                                                    }}>\n                                                        customize\n                                                    </Link>\n                                                </button>\n                                                {user_id === 0\n                                                    ? (\n                                                        <button onClick={this.loginReview}>\n                                                            review\n                                                        </button>\n                                                    )\n                                                    : (\n                                                        <button>\n                                                            <Link to={{\n                                                                pathname: `/recipe/${d.id}#ReviewForm`,\n                                                                reviewOn: true\n                                                            }}>\n                                                                review\n                                                            </Link>\n                                                        </button>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    }\n                                })\n                            )\n                        }\n                        \n                    </div> \n                </section>\n                <section className=\"HomePage__BottomButtons\">\n                    <div className=\"HomePage__BottomButtons__FlexBox\">\n                        <div className=\"BottomButton__More\">\n                            <button onClick={this.loadMoreSmoothies}>more smoothies</button>\n                        </div>\n                        <div className=\"BottomButton__Create\">\n                            <button>\n                                <Link to =\"/create\">\n                                    create a smoothie\n                                </Link>\n                            </button>\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nexport default HomePageDisplay","export default {\n  API_ENDPOINT: \"https://damp-forest-34882.herokuapp.com/api\",\n};\n","import config from '../config'\n\nconst RecipesApiService = {\n    getRecipes() {\n        return fetch(`${config.API_ENDPOINT}/recipes`, {\n            headers: {\n            },\n        })\n            .then(res => \n              (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n    },\n    getRecipe(recipeId) {\n        return fetch(`${config.API_ENDPOINT}/recipes/${recipeId}`, {\n            headers: {\n            },\n        })\n            .then(res => \n                (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n    },\n    postRecipe(smoothie_name, smoothie_pic, ingredients, user_id) {\n        return fetch(`${config.API_ENDPOINT}/users/recipes`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                smoothie_name,\n                smoothie_pic,\n                ingredients,\n                user_id\n            }),\n        })\n            .then(res =>\n                (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n\n    }\n}\n\nexport default RecipesApiService","import config from '../config'\n\nconst FavoritesApiService = {\n    getFavoritesforUser(user_id) {\n        return fetch(`${config.API_ENDPOINT}/users/${user_id}/favorites`, {\n            headers: {\n            },\n        })\n            .then(res => \n                (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n    },\n    postFavorites(user_id, recipe_id) {\n        return fetch(`${config.API_ENDPOINT}/users/favorites`, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id,\n            recipe_id\n          }),\n        })\n          .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n    }\n}\n\nexport default FavoritesApiService","import React, { Component } from 'react'\nimport HomePageDisplay from './HomePageDisplay'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport RecipesApiService from '../../services/recipes-api-service'\nimport FavoritesApiService from '../../services/favorites-api-service'\nimport './HomePage.css'\n\nclass HomePage extends Component {\n\n  static contextType = SmoothieContext\n\n  componentDidMount() {\n    const id = this.context.user ? this.context.user.id : 0\n    Promise.all([\n      RecipesApiService.getRecipes(),\n      FavoritesApiService.getFavoritesforUser(id)\n    ])\n    .then(data => {\n      const recipes = data[0]\n      const favorites = data[1]\n      this.context.updateRecipes(recipes)\n      this.context.updateFavorites(favorites)\n    })\n  }\n\n  handleFavorite = (recipe_id) => {\n    const user_id = this.context.user ? this.context.user.id : 0\n    if(user_id === 0) {\n      alert('Please login to add recipes to your favorites list!')\n    } else {\n        FavoritesApiService.postFavorites(user_id, recipe_id)\n        .then(result => {\n          this.context.toggleFavorites(recipe_id, result.favorite)\n        })\n    }\n  }\n\n    render() {\n        const id = this.context.user ? this.context.user.id : 0\n        const section = this.props.section || \"all\";\n        let recipes;\n        switch (section) {\n          case 'favorites':\n            recipes = this.context.favorites;\n            break;\n\n          case \"user\":\n            recipes = this.context.recipesForUser(id);\n            break;\n\n          default:\n            recipes = this.context.recipes;\n        }\n\n        return (\n            <div className=\"HomePage\">\n                <main className=\"HomePage__Main\">\n                  {!recipes\n                    ? (\n                      <div className=\"Getting_Smoothies\">\n                        <h3>getting smoothies...</h3>\n                      </div>\n                    )\n                    : (\n                      <HomePageDisplay \n                        recipes={recipes} \n                        section={section}\n                        favorite={this.handleFavorite}\n                      />\n                    )\n                  }\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default HomePage","import config from '../config'\n\nconst ReviewsApiService = {\n    getReviews(recipeId) {\n        return fetch(`${config.API_ENDPOINT}/recipes/${recipeId}/reviews`, {\n          headers: {\n          },\n        })\n          .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n    },\n    postReview(headline, review, recipe_id, user_id) {\n        return fetch(`${config.API_ENDPOINT}/users/reviews`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                headline,\n                review,\n                recipe_id,\n                user_id\n            }),\n        })\n            .then(res =>\n                (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n\n    }\n}\n\nexport default ReviewsApiService","import React, { Component } from 'react'\nimport './RecipePage.css'\n\nclass RecipeDisplay extends Component {\n\n    render() {\n        const recipe = this.props.recipe || {recipe: \"loading\"}\n        const userData = recipe.user || {user_name: \"loading\"}\n        const smoothieData = recipe.smoothie || {smoothie: \"loading\", ingredients: [\"loading\"]}\n        return (\n            <>\n                {!smoothieData\n                    ? (\n                        <div>\n                            <h1>loading...</h1>\n                        </div>\n                    )\n                    : (\n                        <section className=\"RecipePage__RecipeDisplay\">\n                            <h1>{smoothieData.smoothie_name}</h1>\n                            <h3>made by {userData.user_name}</h3>\n                            <div className=\"RecipePage__RecipeDisplay__FlexBox\">\n                                <img \n                                    src={smoothieData.smoothie_pic} \n                                    alt={`delicious smoothie named ${smoothieData.smoothie_name}`}\n                                />\n                                <div className=\"RecipeBox\">\n                                    <h3>Recipe</h3>\n                                        <ul>\n                                            {smoothieData.ingredients.map(i => \n                                                <>\n                                                    <li key={i.title}>\n                                                        {i.quantity} {i.units} {i.title}\n                                                    </li>\n                                                    <br/>\n                                                </>\n                                            )}\n                                        </ul>\n                                </div>\n                            </div>\n                        </section>\n                    )\n                }\n            </>\n        )\n    }\n}\n\nexport default RecipeDisplay","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./RecipePage.css\";\n\nclass RecipeButtons extends Component {\n  static contextType = SmoothieContext;\n\n  render() {\n    const { recipe = {} } = this.props;\n    return (\n      <section className=\"RecipePage__BottomButtons\">\n        <div className=\"RecipePage__BottomButtons__FlexBox\">\n          {\"smoothie\" in recipe ? (\n            <>\n              <button\n                onClick={() => this.props.favorite(recipe.smoothie.recipe_id)}\n              >\n                favorite\n              </button>\n              <button>\n                <Link\n                  to={{\n                    pathname: `/create`,\n                    prepopulate: true,\n                    customId: `${recipe.smoothie.recipe_id}`,\n                  }}\n                >\n                  customize\n                </Link>\n              </button>\n              <button onClick={this.props.click}>\n                <Link\n                  to={{\n                    pathname: `/recipe/${recipe.smoothie.recipe_id}#ReviewForm`,\n                    reviewOn: true,\n                  }}\n                >\n                  review\n                </Link>\n              </button>\n            </>\n          ) : (\n            <>\n              <button>favorite</button>\n              <button>customize</button>\n              <button>review</button>\n            </>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default RecipeButtons;\n","import React, { Component } from 'react'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport ReviewsApiService from '../../services/reviews-api-service'\nimport './RecipePage.css'\n\nclass ReviewForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showThanks: false\n        }\n    }\n\n    static contextType = SmoothieContext\n\n    handleReviewSubmit = (event) => {\n        event.preventDefault();\n        const headline = event.target.headline.value\n        const review = event.target.review.value\n        const recipe_id = this.props.recipe.smoothie.recipe_id \n        const user_id = this.props.recipe.user.user_id\n        ReviewsApiService.postReview(headline, review, recipe_id, user_id)\n        this.handleSubmitTernary();\n    }\n\n    handleSubmitTernary = (event) => {\n        const showThanks = this.state.showThanks\n        this.setState({\n            showThanks: !showThanks\n        })\n    }\n\n    render() {\n        const showThanks = this.state.showThanks\n        return (\n            <section className=\"RecipePage__ReviewForm\" id=\"ReviewForm\">\n                {showThanks\n                    ? (\n                        <div className=\"TernaryBox\">\n                            <h3>Thanks!</h3>\n                            <h5>We appriciate your review.</h5>\n                        </div>\n                    )\n                    : (\n                        <form onSubmit={this.handleReviewSubmit}>\n                            <label htmlFor=\"headline\">\n                                Add a headline\n                            </label>\n                            <br/>\n                            <input\n                                type=\"text\"\n                                placeholder=\"What's most important to know?\"\n                                size=\"33\"\n                                name=\"headline\"\n                                id=\"headline\"\n                                required\n                            />\n                            <br/>\n                            <label htmlFor=\"review\">\n                                Write your review\n                            </label>\n                            <br/>\n                            <textarea\n                                placeholder='Was this smoothie \"yay\" or \"nay\"? Why?'\n                                rows=\"10\"\n                                cols=\"50\"\n                                name=\"review\"\n                                id=\"review\"\n                                required\n                            />\n                            <br/>\n                            <button>submit</button>\n                        </form>\n                    )\n                }\n            </section>\n        )\n    }\n}\n\nexport default ReviewForm","import React, { Component } from 'react'\nimport './RecipePage.css'\n\nclass ReviewBox extends Component {\n\n    render() {\n        const reviews = this.props.reviews || [{headline: \"loading\", review: \"loading\", user_pic: \"loading\", user_name: \"loading\"}]\n        return (\n            <section className=\"RecipePage__ReviewsBox\">\n                <h3>Reviews</h3>\n                {reviews.length === 0\n                    ? (\n                        <div className=\"TernaryBox\">\n                            <h3>No reviews yet</h3>\n                            <h5>Be the first to leave a review!</h5>\n                            <button onClick={this.props.click}>review</button>\n                        </div>\n                    )\n                    : (\n                        reviews.map(r => \n                            <div className=\"IndividualReviewBox\" key={r.headline}>\n                                <div className=\"IndividualReviewBox__User\">\n                                    <img\n                                        src={r.user_pic}\n                                        alt={`avatar for ${r.user_name}`}\n                                    />\n                                    <span>{r.user_name}</span>\n                                </div>\n                                <div className=\"IndividualReviewBox__Review\">\n                                    <h4>\"{r.headline}\"</h4>\n                                    <span>\"{r.review}\"</span>\n                                </div>\n                            </div>\n                        )\n                    )\n                }\n            </section>\n        )\n    }\n}\n\nexport default ReviewBox","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport ReviewsApiService from \"../../services/reviews-api-service\";\nimport FavoritesApiService from \"../../services/favorites-api-service\";\nimport RecipeDisplay from \"./RecipeDisplay\";\nimport RecipeButtons from \"./RecipeButtons\";\nimport ReviewForm from \"./ReviewForm\";\nimport ReviewBox from \"./ReviewBox\";\nimport \"./RecipePage.css\";\n\nclass RecipePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm:\n        this.props.location && this.props.location.reviewOn\n          ? this.props.location.reviewOn\n          : false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  componentDidMount() {\n    const [recipeId] =\n      this.props &&\n      this.props.match &&\n      this.props.match.params.recipeId.split(\"#\")\n        ? this.props.match.params.recipeId.split(\"#\")\n        : [0];\n    Promise.all([\n      RecipesApiService.getRecipe(recipeId),\n      ReviewsApiService.getReviews(recipeId),\n    ]).then((data) => {\n      const recipe = data[0];\n      const reviews = data[1];\n      this.context.updateRecipe(recipe);\n      this.context.updateReviews(reviews);\n    });\n  }\n\n  handleFavorite = (recipe_id) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to add recipes to your favorites list!\");\n    } else {\n      FavoritesApiService.postFavorites(recipe_id, user_id).then((result) => {\n        console.log(result);\n      });\n    }\n  };\n\n  handleReviewButtonClick = (event) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to leave a review!\");\n    } else {\n      const showForm = this.state.showForm;\n      this.setState({\n        showForm: !showForm,\n      });\n    }\n  };\n\n  render() {\n    const recipe = this.context.recipe;\n    const reviews = this.context.reviews;\n    return (\n      <div className=\"RecipePage\">\n        <main className=\"RecipePage__Main\">\n          <RecipeDisplay recipe={recipe} />\n          <RecipeButtons\n            recipe={recipe}\n            click={this.handleReviewButtonClick}\n            favorite={this.handleFavorite}\n          />\n          {this.state.showForm && <ReviewForm recipe={recipe} />}\n          <ReviewBox reviews={reviews} click={this.handleReviewButtonClick} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default RecipePage;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport \"./CreatePage.css\";\n\nclass RecipeBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prepopulate: this.props.location.prepopulate\n        ? this.props.location.prepopulate\n        : false,\n      thanks: false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  handleRecipeSubmit = (event) => {\n    event.preventDefault();\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to publish your recipe!\");\n    } else {\n      const smoothie_name = event.target.title.value;\n      const smoothie_pic = \"https://i.ibb.co/VSS1v7M/smoothie-art-png-tiny.png\";\n      const user_id = this.context.user.id;\n      const recipeArray = this.props.recipeArray;\n      if (recipeArray.length === 0) {\n        alert(\"Please add at least one ingredient before publishing!\");\n      } else if (!smoothie_name) {\n        alert(\"Please name your smoothie before publishing!\");\n      } else {\n        const ingredients = recipeArray.map((r) => {\n          delete r.title;\n          return r;\n        });\n        RecipesApiService.postRecipe(\n          smoothie_name,\n          smoothie_pic,\n          ingredients,\n          user_id\n        );\n        this.setState({ thanks: true });\n      }\n    }\n  };\n\n  render() {\n    const prepopulate = this.props.location.prepopulate;\n    const recipe = this.props.recipe;\n    const recipeArray = this.props.recipeArray || [];\n    return (\n      <>\n        {this.state.thanks ? (\n          <div className=\"thanksBox\">\n            <h2>Thank you!</h2>\n            <h3>We got your submission : )</h3>\n            <h4>\n              <Link to=\"/home\">Head back to all smoothies</Link>\n            </h4>\n          </div>\n        ) : (\n          <form onSubmit={this.handleRecipeSubmit} className=\"RecipeForm\">\n            <div className=\"RecipeTitle\">\n              <label htmlFor=\"title\"></label>\n              {prepopulate ? (\n                <input\n                  type=\"text\"\n                  placeholder={!recipe ? \"Loading..\" : recipe.smoothie_name}\n                  name=\"title\"\n                  id=\"title\"\n                  required\n                />\n              ) : (\n                <input\n                  type=\"text\"\n                  placeholder=\"My Awesome Smoothie\"\n                  name=\"title\"\n                  id=\"title\"\n                  required\n                />\n              )}\n              <br />\n              Name your smoothie!\n            </div>\n            <br />\n            <div className=\"Recipe__Box\">\n              {recipeArray.length === 0 ? (\n                <div className=\"Recipe__Item\">\n                  <h3>Add ingredients below to start making your recipe.</h3>\n                </div>\n              ) : (\n                recipeArray.map((r) => (\n                  <div className=\"Recipe__Item\" key={r.id}>\n                    <h3>\n                      {r.quantity} {r.units} {r.title}\n                    </h3>\n                    <button onClick={(e) => this.props.deleteRecipeLine(e, r)}>\n                      x\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n            <div className=\"Buttons__Box\">\n              <button type=\"submit\">publish</button>\n            </div>\n          </form>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(RecipeBox);\n","import config from '../config'\n\nconst IngredientsApiService = {\n    getIngredients() {\n        return fetch(`${config.API_ENDPOINT}/ingredients`, {\n          headers: {\n          },\n        })\n          .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n    },\n    postIngredient(title, category) {\n        return fetch(`${config.API_ENDPOINT}/ingredients`, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            title,\n            category\n          }),\n        })\n          .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n    }\n}\n\nexport default IngredientsApiService","import React, { Component } from 'react'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport IngredientsApiService from '../../services/ingredients-api-service'\nimport './CreatePage.css'\n\nclass Accordion extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openCategory: null,\n        }\n    }\n    \n    static contextType = SmoothieContext\n\n    componentDidMount() {\n        IngredientsApiService.getIngredients()\n            .then(ingredients => {\n                this.context.updateIngredients(ingredients)\n            })\n    }\n\n    changeAccordion(event, id) {\n        event.preventDefault();\n        if (id === this.state.openCategory) {\n          this.setState({ openCategory: null })\n        } else {\n          this.setState({ openCategory: id })\n        } \n    }\n\n    handleAddRecipeItem = (event) => {\n        event.preventDefault();\n        const title = event.target.title.value\n        const ingredient_id = event.target.ingredient_id.value\n        const quantity = event.target.quantity.value\n        const units = event.target.units.value\n        const newRecipeLine = { ingredient_id, title, quantity, units } \n        this.props.recipeLineDisplay(newRecipeLine)\n    }\n\n    render () {\n        const { openCategory } = this.state;\n        const ingredients = this.context.ingredients\n        const categories = [...new Set(ingredients.map(i => i.category))];\n        const ingredientsFor = (c) => ingredients.filter(i => i.category === c);\n        return (\n            <div className=\"Ingredients__Box\">\n                <h3>Pick your ingreditents</h3>\n                <div className=\"Ingredients__List\">\n                    {categories.map(c => \n                        <div className=\"Ingredients__Category\" key={c}>\n                            <button onClick={event => this.changeAccordion(event, c)}>\n                                {c}\n                            </button>\n                            {c === openCategory &&\n                                ingredientsFor(c).map(i => \n                                    <div className=\"Ingredients__Item\" key={i.id}>\n                                        <form className=\"accordionForm\" onSubmit={this.handleAddRecipeItem}>\n                                            <span>{i.title}</span>\n                                            <input\n                                                type=\"hidden\"\n                                                name=\"ingredient_id\"\n                                                id=\"ingredient_id\"\n                                                value={i.id}\n                                            />\n                                            <input\n                                                type=\"hidden\"\n                                                name=\"title\"\n                                                id=\"title\"\n                                                value={i.title}\n                                            />\n                                            <input\n                                                name=\"quantity\"\n                                                id=\"quantity\"\n                                                type=\"text\"\n                                                placeholder=\"quantity\"\n                                                size=\"7\"\n                                                required\n                                            />\n                                            <input\n                                                name=\"units\"\n                                                id=\"units\"\n                                                type=\"text\"\n                                                placeholder=\"units\"\n                                                size=\"4\"\n                                            />\n                                            <button className=\"add\">add</button>\n                                        </form>\n                                    </div>\n                                )}   \n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Accordion","import React, { Component } from 'react'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport IngredientsApiService from '../../services/ingredients-api-service'\nimport './CreatePage.css'\n\nclass AddNewIngredient extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ingredientSubmitted: false\n        }\n    }\n\n    static contextType = SmoothieContext\n\n    handleAddNewItem = (event) => {\n        event.preventDefault();\n        const category = event.target.newItemCategory.value\n        const title = event.target.newItemTitle.value\n        IngredientsApiService.postIngredient(title, category)\n        this.setState({ingredientSubmitted: true})\n    }\n\n    addAnother = (event) => {\n        event.preventDefault();\n        this.setState({ingredientSubmitted: false})\n    }\n\n    render () {\n        const ingredients = this.context.ingredients\n        const categories = [...new Set(ingredients.map(i => i.category))];\n        return (\n            <>\n                {this.state.ingredientSubmitted\n                    ? ( \n                        <div>\n                            <h1>Thanks!</h1>\n                            <h3>We got your submission : )</h3>\n                            <button onClick={this.addAnother}>add another</button>\n                        </div>\n                    )\n                    : (\n                        <form className=\"newIngredientForm\" onSubmit={this.handleAddNewItem}>\n                            <label>\n                                Category:\n                            </label>\n                            <select\n                                    name=\"newItemCategory\"\n                                >\n                                {categories.map(i =>\n                                    <option\n                                        value={i}\n                                    >\n                                        {i}\n                                    </option>\n                                )}\n                            </select>\n                            <br/>\n                            <br/>\n                            <label>\n                                Name:\n                            </label>\n                            <input\n                                    name=\"newItemTitle\"\n                                    type=\"text\" \n                                    placeholder=\"ie: starfuit\"\n                                />\n                            <br/>\n                            <br/>\n                            <button>add</button>\n                        </form>\n                    )\n                }\n           </> \n        )\n    }\n}\n\nexport default AddNewIngredient","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport RecipeBox from './RecipeBox'\nimport Accordion from './Accordion'\nimport AddNewIngredient from './AddNewIngredient'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport RecipesApiService from '../../services/recipes-api-service'\nimport './CreatePage.css'\n\nclass CreatePage extends Component {\n\nconstructor(props) {\n    super(props)\n    this.state = {\n        recipe: {},\n        recipeArray: []\n    }\n}\n\nstatic contextType = SmoothieContext\n\ncomponentDidMount() {\n    const recipeId = this.props.location.customId\n    if (recipeId) {\n        RecipesApiService.getRecipe(recipeId)\n        .then(recipe => {\n            this.context.updateRecipe(recipe)\n            this.setState({ recipe: recipe.smoothie })\n            this.setState({ recipeArray: recipe.smoothie.ingredients })\n        })\n    }\n}\n\nshowNewItemForm = (event) => {\n    const user_id = this.context.user ? this.context.user.id : 0\n    if(user_id === 0) {\n        alert('Please login to add new new ingredients to our database!')\n    } else {\n        const showForm = this.state.showForm\n        this.setState({\n            showForm: !showForm\n        })\n    }\n}\n\nrecipeLineDisplay = (newRecipeLine) => {\n    const recipeArray = this.state.recipeArray\n    const newRecipeLines = recipeArray.concat(newRecipeLine)\n    this.setState({ recipeArray: newRecipeLines })\n}\n\ndeleteRecipeLine = (event, recipeLine) => {\n    event.preventDefault();\n    this.setState({\n        recipeArray: this.state.recipeArray.filter(r => r !== recipeLine)\n    });\n}\n\nrender() {\n    const recipe = this.state.recipe\n    const recipeArray = this.state.recipeArray\n    return (\n        <div className=\"CreatePage\">\n            <main className=\"CreatePage__Main\">\n                <div className=\"CreatePage__Main__FlexBox\">\n                    <RecipeBox \n                        recipe={recipe}\n                        recipeArray={recipeArray} \n                        deleteRecipeLine={this.deleteRecipeLine}\n                        recipeLineDisplay={this.recipeLineDisplay}\n                    />\n                    <Accordion \n                        recipeLineDisplay={this.recipeLineDisplay} \n                    />\n                    <div className=\"Ingredients__AddNew\">\n                        <h5>Can't find your favorite ingredient? Click below to add it to our database!</h5>\n                        <button \n                            onClick={this.showNewItemForm}\n                        >\n                            New Ingredient\n                        </button>\n                        <br/>\n                        <br/>\n                            {this.state.showForm && \n                                    <AddNewIngredient />\n                            }\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}\n\n}\n\nexport default withRouter(CreatePage)","import config from '../config'\n\nconst AuthApiService = {\n    getUsers() {\n        return fetch(`${config.API_ENDPOINT}/users`, {\n          headers: {\n          },\n        })\n          .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n    },\n}\n\nexport default AuthApiService","import React, { Component } from 'react'\nimport SmoothieContext from '../../contexts/SmoothieContext'\nimport './LoginPage.css'\nimport AuthApiService from '../../services/auth-api-service'\n\nclass LoginPage extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            clickedLogIn: false\n        }\n    }\n\n    static contextType = SmoothieContext\n\n    onLogin = (event) => {\n        event.preventDefault();\n        const user_name = event.target.user_name.value\n        const password = event.target.password.value\n        this.setState({ clickedLogIn: true })\n        AuthApiService.getUsers()\n        .then(users => {\n            const userLog = users.filter(u => u.user_name === user_name && u.password === password)\n            const user = userLog[0]\n            if(!user) {\n                alert('incorrect username or password')\n            } else {\n                this.context.logIn(user)\n                this.props.history.push(`/home`)\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <main className=\"LoginPage__Main\">\n                    {this.props.clickedLogIn\n                        ?(\n                            <div className=\"Logging_In\">\n                                <h3>logging in...</h3>\n                            </div>\n                        )\n                        :(\n                            <>\n                                <h1>Login</h1>\n                                <form onSubmit={this.onLogin}>\n                                    <label htmlFor=\"username\">\n                                        username\n                                    </label>\n                                    <br/>\n                                    <input \n                                        type=\"text\"\n                                        name=\"user_name\"\n                                        id=\"user_name\"\n                                        required\n                                    />    \n                                    <br/>\n                                    <label htmlFor=\"password\">\n                                        password\n                                    </label>\n                                    <br/>\n                                    <input \n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        required \n                                    />\n                                    <br/>\n                                    <br/>\n                                    <button>submit</button>\n                                </form>\n                            </>\n                        )\n                    }\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFoundPage.css'\n\nclass NotFoundPage extends Component {\n    render() {\n        return (\n            <div className=\"NotFoundPage\">\n                <main className=\"NotFoundPage__Main\">\n                    <h1>404 Not Found</h1>\n                    <h3>Sorry, this page doesn't exist!</h3>\n                    <button>\n                        <Link to=\"/home\">\n                            home\n                        </Link>\n                    </button>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default NotFoundPage","import React, { Component } from 'react'\nimport './Footer.css'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <nav className='Footer'>\n                <div className='Footer__Menu'>\n                    <span>\n                        © Smoothie.io 2020. All rights reserved.\n                    </span>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Footer","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport RecipePage from \"../RecipePage/RecipePage\";\nimport CreatePage from \"../CreatePage/CreatePage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport NotFoundPage from \"../NotFoundPage/NotFoundPage\";\nimport Footer from \"../Footer/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App__Header\">\n          <Header />\n        </header>\n        <main className=\"App__Main\">\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route\n              exact\n              path=\"/home/favorites\"\n              render={() => <HomePage section=\"favorites\" />}\n            />\n            <Route\n              exact\n              path=\"/home/my-recipes\"\n              render={() => <HomePage section=\"user\" />}\n            />\n            <Route path=\"/recipe/:recipeId\" component={RecipePage} />\n            <Route path=\"/create\" component={CreatePage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { SmoothieProvider } from './contexts/SmoothieContext';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/smoothie.io\">\n        <SmoothieProvider>\n                <App />\n        </SmoothieProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}