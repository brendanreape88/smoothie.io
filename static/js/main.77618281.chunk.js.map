{"version":3,"sources":["contexts/SmoothieContext.js","components/Header/Header.js","components/LandingPage/LandingPageHero.js","components/LandingPage/HowItWorks.js","components/LandingPage/DemoAccount.js","components/LandingPage/GetStarted.js","components/LandingPage/LandingPage.js","components/HomePage/HomePageNav.js","components/HomePage/HomePageDisplay.js","config.js","services/recipes-api-service.js","services/favorites-api-service.js","components/HomePage/HomePage.js","services/reviews-api-service.js","components/RecipePage/RecipeDisplay.js","components/RecipePage/RecipeButtons.js","components/RecipePage/ReviewForm.js","components/RecipePage/ReviewBox.js","components/RecipePage/RecipePage.js","components/CreatePage/RecipeBox.js","services/ingredients-api-service.js","components/CreatePage/Accordion.js","components/CreatePage/AddNewIngredient.js","components/CreatePage/CreatePage.js","services/auth-api-service.js","components/LoginPage/LoginPage.js","components/NotFoundPage/NotFoundPage.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["SmoothieContext","React","createContext","favorites","ingredients","recipe","recipes","reviews","user","favoriteRecipes","updateFavorites","toggleFavorites","updateIngredients","updateRecipe","updateRecipes","findRecipe","id","recipesForUser","updateReviews","findReviews","handleReviewSubmit","logIn","logOut","SmoothieProvider","state","setState","recipeId","favorite","favoritesArray","find","f","recipe_id","removeItemArray","filter","headline","review","userName","userId","concat","event","this","userData","r","userFavorites","includes","user_id","value","Provider","props","children","Component","Header","context","className","to","icon","faLeaf","onClick","contextType","LandingPageHero","HowItWorks","src","alt","DemoAccount","GetStarted","LandingPage","classFor","section","currentSection","HomePageNav","SmoothieContex","HomePageDisplay","numberOfSmoothies","loadMoreSmoothies","loginReview","alert","data","map","d","i","key","smoothie_pic","smoothie_name","pathname","prepopulate","customId","reviewOn","RecipesApiService","getRecipes","fetch","config","headers","then","res","ok","json","e","Promise","reject","getRecipe","postRecipe","method","body","JSON","stringify","FavoritesApiService","getFavoritesforUser","postFavorites","HomePage","handleFavorite","result","all","ReviewsApiService","getReviews","postReview","RecipeDisplay","user_name","smoothieData","smoothie","title","quantity","units","RecipeButtons","click","ReviewForm","preventDefault","target","handleSubmitTernary","showThanks","onSubmit","htmlFor","type","placeholder","size","name","required","rows","cols","ReviewBox","user_pic","length","RecipePage","console","log","handleReviewButtonClick","showForm","location","match","params","split","RecipeBox","handleRecipeSubmit","recipeArray","thanks","deleteRecipeLine","withRouter","IngredientsApiService","getIngredients","postIngredient","category","Accordion","handleAddRecipeItem","newRecipeLine","ingredient_id","recipeLineDisplay","openCategory","categories","Set","c","changeAccordion","ingredientsFor","AddNewIngredient","handleAddNewItem","newItemCategory","newItemTitle","ingredientSubmitted","addAnother","CreatePage","showNewItemForm","newRecipeLines","recipeLine","AuthApiService","getUsers","LoginPage","onLogin","password","clickedLogIn","users","u","history","push","NotFoundPage","Footer","App","exact","path","component","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.77618281.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst SmoothieContext = React.createContext({\n  favorites: [],\n  ingredients: [],\n  recipe: {},\n  recipes: [],\n  reviews: [],\n  user: null,\n  favoriteRecipes: () => {},\n  updateFavorites: () => {},\n  toggleFavorites: () => {},\n  updateIngredients: () => {},\n  updateRecipe: () => {},\n  updateRecipes: () => {},\n  findRecipe: (id) => {},\n  recipesForUser: (id) => {},\n  updateReviews: () => {},\n  findReviews: (id) => {},\n  handleReviewSubmit: () => {},\n  logIn: () => {},\n  logOut: () => {},\n});\n\nexport default SmoothieContext;\n\nexport class SmoothieProvider extends Component {\n  state = {\n    favorites: [],\n    ingredients: [],\n    recipe: {},\n    recipes: [],\n    reviews: [],\n    user: null,\n  };\n\n  favoriteRecipes() {\n    const { recipes, userData } = this.state;\n    return recipes.filter((r) => userData.userFavorites.includes(r.id));\n  }\n\n  updateFavorites = (favorites) => {\n    this.setState({ favorites });\n  };\n\n  toggleFavorites = (recipeId, favorite) => {\n    const favoritesArray = this.state.favorites;\n    if (favoritesArray.find((f) => f.recipe_id === recipeId)) {\n      const removeItemArray = favoritesArray.filter(\n        (f) => f.recipe_id !== recipeId\n      );\n      this.setState({ favorites: removeItemArray });\n    } else {\n      this.setState({ favorites: [...this.state.favorites, favorite] });\n    }\n  };\n\n  updateIngredients = (ingredients) => {\n    this.setState({ ingredients });\n  };\n\n  updateRecipe = (recipe) => {\n    this.setState({ recipe });\n  };\n\n  updateRecipes = (recipes) => {\n    this.setState({ recipes });\n  };\n\n  findRecipe(id) {\n    return this.state.recipes.find((r) => r.id === id);\n  }\n\n  recipesForUser(id) {\n    const { recipes } = this.state;\n    return recipes.filter((r) => r.user_id === id);\n  }\n\n  updateReviews = (reviews) => {\n    this.setState({ reviews });\n  };\n\n  findReviews(id) {\n    return this.state.reviews.filter((r) => r.recipeId === id);\n  }\n\n  handleReviewSubmit = (headline, review, recipeId, userName, userId) => {\n    const reviews = this.state.reviews;\n    this.setState({\n      reviews: reviews.concat({\n        recipeId: recipeId,\n        userName: userName,\n        userId: userId,\n        headline: headline,\n        review: review,\n      }),\n    });\n  };\n\n  logIn = (user) => {\n    this.setState({ user });\n  };\n\n  logOut = (event) => {\n    this.setState({ user: null });\n  };\n\n  render() {\n    const value = {\n      favorites: this.state.favorites,\n      ingredients: this.state.ingredients,\n      recipe: this.state.recipe,\n      recipes: this.state.recipes,\n      reviews: this.state.reviews,\n      user: this.state.user,\n      favoriteRecipes: () => this.favoriteRecipes(),\n      updateFavorites: this.updateFavorites,\n      toggleFavorites: this.toggleFavorites,\n      updateIngredients: this.updateIngredients,\n      updateRecipe: this.updateRecipe,\n      updateRecipes: this.updateRecipes,\n      findRecipe: (id) => this.findRecipe(id),\n      recipesForUser: (id) => this.recipesForUser(id),\n      updateReviews: this.updateReviews,\n      findReviews: (id) => this.findReviews(id),\n      handleReviewSubmit: this.handleReviewSubmit,\n      logIn: this.logIn,\n      logOut: this.logOut,\n    };\n    return (\n      <SmoothieContext.Provider value={value}>\n        {this.props.children}\n      </SmoothieContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  static contextType = SmoothieContext;\n\n  logOut = () => {\n    this.context.logOut();\n  };\n\n  render() {\n    const user = this.context.user;\n    return (\n      <nav className=\"Header\">\n        <div className=\"Header__Logo\">\n          <div className=\"Icon\">\n            <Link to=\"/\">\n              <FontAwesomeIcon icon={faLeaf} />\n            </Link>\n          </div>\n          <div className=\"Title\">\n            <h1>\n              <Link to=\"/\">Smoothie.io</Link>\n            </h1>\n          </div>\n        </div>\n        <div className=\"Header__Menu\">\n          <span>\n            {user ? (\n              <Link to=\"/\" onClick={this.logOut}>\n                logout\n              </Link>\n            ) : (\n              <Link to=\"/login\">login</Link>\n            )}\n          </span>\n          <span>\n            <Link to=\"/home\">smoothies</Link>\n          </span>\n          <span>\n            <Link to=\"/create\">create</Link>\n          </span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./LandingPage.css\";\n\nclass LandingPageHero extends Component {\n  render() {\n    return (\n      <header className=\"LandingPage__Hero\">\n        <h1>Create the perfect smoothie.</h1>\n        <h2>\n          Smoothie.io gives you amazing smoothie recipes that you can completely\n          customize. You can also build your own from scratch and share them\n          with the world!\n        </h2>\n      </header>\n    );\n  }\n}\n\nexport default LandingPageHero;\n","import React, { Component } from \"react\";\nimport \"./LandingPage.css\";\n\nclass HowItWorks extends Component {\n  render() {\n    return (\n      <section className=\"LandingPage__HowItWorks\">\n        <h3>How it works</h3>\n        <div className=\"LandingPage__HowItWorks__Box\">\n          <img\n            src=\"https://joyfoodsunshine.com/wp-content/uploads/2019/07/green-smoothie-recipe-2.jpg\"\n            alt=\"delicious green smoothie surrounded by fruit and kale\"\n          />\n          <ul>\n            <li>Browse through the list of recipes submitted by our users</li>\n            <br />\n            <li>Choose to \"favorite\" it, review it, or customize it</li>\n            <br />\n            <li>You can also create a recipe from scratch</li>\n            <br />\n            <li>\n              Once you've made the perfect recipe, publish it so others can\n              enjoy it\n            </li>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default HowItWorks;\n","import React, { Component } from \"react\";\nimport \"./LandingPage.css\";\n\nclass DemoAccount extends Component {\n  render() {\n    return (\n      <section className=\"LandingPage__DemoAccount\">\n        <h3>Demo Account</h3>\n        <div className=\"LandingPage__DemoAccount__Box\">\n          <span>To log in, please use the credientials below.</span>\n          <br />\n          <br />\n          <span>User: greenguru</span>\n          <br />\n          <br />\n          <span>Password: Greenguru1!</span>\n          <br />\n          <br />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default DemoAccount;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingPage.css\";\n\nclass GetStarted extends Component {\n  render() {\n    return (\n      <section className=\"LandingPage__GetStarted\">\n        <h3>Get started</h3>\n        <div className=\"LandingPage__GetStarted__Box\">\n          <h4>\n            <Link to=\"/login\">Login</Link>\n          </h4>\n          <h4>\n            <Link to=\"/home\">Go to the app</Link>\n          </h4>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default GetStarted;\n","import React, { Component } from \"react\";\nimport LandingPageHero from \"./LandingPageHero\";\nimport HowItWorks from \"./HowItWorks\";\nimport DemoAccount from \"./DemoAccount\";\nimport GetStarted from \"./GetStarted\";\nimport \"./LandingPage.css\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"LandingPage\">\n        <main className=\"LandingPage__Main\">\n          <LandingPageHero />\n          <HowItWorks />\n          <DemoAccount />\n          <GetStarted />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SmoothieContex from \"../../contexts/SmoothieContext\";\nimport \"./HomePage.css\";\n\nfunction classFor(section, currentSection) {\n  if (section !== currentSection) return \"homeNotActive\";\n  else return \"homeActive\";\n}\n\nclass HomePageNav extends Component {\n  static contextType = SmoothieContex;\n\n  render() {\n    const id = this.context.user ? this.context.user.id : 0;\n    return (\n      <div className=\"HomePage__HomeDisplay__Nav\">\n        <ul>\n          {id === 0 ? (\n            <li>\n              <Link to=\"/home\" className={classFor(\"all\", this.props.section)}>\n                All Recipes\n              </Link>\n            </li>\n          ) : (\n            <>\n              <li>\n                <Link\n                  to=\"/home\"\n                  className={classFor(\"all\", this.props.section)}\n                >\n                  All Recipes\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/home/favorites\"\n                  className={classFor(\"favorites\", this.props.section)}\n                >\n                  Favorites\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/home/my-recipes\"\n                  className={classFor(\"user\", this.props.section)}\n                >\n                  My Recipes\n                </Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default HomePageNav;\n","import React, { Component } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport HomePageNav from \"./HomePageNav\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./HomePage.css\";\n\nclass HomePageDisplay extends Component {\n  state = {\n    numberOfSmoothies: 6,\n  };\n\n  static contextType = SmoothieContext;\n\n  loadMoreSmoothies = () => {\n    let { numberOfSmoothies } = this.state;\n    this.setState({\n      numberOfSmoothies: (numberOfSmoothies += 6),\n    });\n  };\n\n  loginReview = () => {\n    alert(\"Please login to leave a review!\");\n  };\n\n  render() {\n    const data = this.props.recipes;\n    const { numberOfSmoothies } = this.state;\n    const user_id = this.context.user ? this.context.user.id : 0;\n    return (\n      <>\n        <section className=\"HomePage__HomeDisplay\">\n          <HomePageNav section={this.props.section} />\n          <div className=\"HomePage__HomeDisplay__FlexBox\">\n            {!data ? (\n              <h3>getting recipes...</h3>\n            ) : (\n              data.map((d, i) => {\n                if (i < numberOfSmoothies) {\n                  return (\n                    <div\n                      className=\"HomePage__HomeDisplay__FlexBox__Item\"\n                      key={d.id}\n                    >\n                      <Link to={`/recipe/${d.id}`}>\n                        {d.smoothie_pic ? (\n                          <img\n                            src={`${d.smoothie_pic}`}\n                            alt={`a smoothie named ${d.smoothie_name}`}\n                          />\n                        ) : (\n                          <img\n                            src=\"https://i.ibb.co/VSS1v7M/smoothie-art-png-tiny.png\"\n                            alt={`a smoothie named ${d.smoothie_name}`}\n                          />\n                        )}\n                      </Link>\n                      <div className=\"Item__Controls\">\n                        <h3 className=\"CardTitle\">\n                          <Link to={`/recipe/${d.id}`}>{d.smoothie_name}</Link>\n                        </h3>\n                        <button onClick={() => this.props.favorite(d.id)}>\n                          favorite\n                        </button>\n                        <button>\n                          <Link\n                            to={{\n                              pathname: `/create`,\n                              prepopulate: true,\n                              customId: `${d.id}`,\n                            }}\n                          >\n                            customize\n                          </Link>\n                        </button>\n                        {user_id === 0 ? (\n                          <button onClick={this.loginReview}>review</button>\n                        ) : (\n                          <button>\n                            <Link\n                              to={{\n                                pathname: `/recipe/${d.id}#ReviewForm`,\n                                reviewOn: true,\n                              }}\n                            >\n                              review\n                            </Link>\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  );\n                }\n              })\n            )}\n          </div>\n        </section>\n        <section className=\"HomePage__BottomButtons\">\n          <div className=\"HomePage__BottomButtons__FlexBox\">\n            <div className=\"BottomButton__More\">\n              <button onClick={this.loadMoreSmoothies}>more smoothies</button>\n            </div>\n            <div className=\"BottomButton__Create\">\n              <button>\n                <Link to=\"/create\">create a smoothie</Link>\n              </button>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default HomePageDisplay;\n","export default {\n  API_ENDPOINT: \"https://damp-forest-34882.herokuapp.com/api\",\n};\n","import config from \"../config\";\n\nconst RecipesApiService = {\n  getRecipes() {\n    return fetch(`${config.API_ENDPOINT}/recipes`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  getRecipe(recipeId) {\n    return fetch(`${config.API_ENDPOINT}/recipes/${recipeId}`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  postRecipe(smoothie_name, smoothie_pic, ingredients, user_id) {\n    return fetch(`${config.API_ENDPOINT}/users/recipes`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        smoothie_name,\n        smoothie_pic,\n        ingredients,\n        user_id,\n      }),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default RecipesApiService;\n","import config from \"../config\";\n\nconst FavoritesApiService = {\n  getFavoritesforUser(user_id) {\n    return fetch(`${config.API_ENDPOINT}/users/${user_id}/favorites`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  postFavorites(user_id, recipe_id) {\n    return fetch(`${config.API_ENDPOINT}/users/favorites`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id,\n        recipe_id,\n      }),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default FavoritesApiService;\n","import React, { Component } from \"react\";\nimport HomePageDisplay from \"./HomePageDisplay\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport FavoritesApiService from \"../../services/favorites-api-service\";\nimport \"./HomePage.css\";\n\nclass HomePage extends Component {\n  static contextType = SmoothieContext;\n\n  //Within the componentDidMount both the recipes and the list of favorite recipes\n  //belonging to the logged in user are fetched from the smoothie.io database.\n\n  componentDidMount() {\n    const id = this.context.user ? this.context.user.id : 0;\n    Promise.all([\n      RecipesApiService.getRecipes(),\n      FavoritesApiService.getFavoritesforUser(id),\n    ]).then((data) => {\n      const recipes = data[0];\n      const favorites = data[1];\n      this.context.updateRecipes(recipes);\n      this.context.updateFavorites(favorites);\n    });\n  }\n\n  handleFavorite = (recipe_id) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to add recipes to your favorites list!\");\n    } else {\n      FavoritesApiService.postFavorites(user_id, recipe_id).then((result) => {\n        this.context.toggleFavorites(recipe_id, result.favorite);\n      });\n    }\n  };\n\n  //By default, the home page displays the total list of recipies from the database.\n  //If the user is logged in, then they can filter this list to see the recipes that\n  //they have made, or see a list of their favorite recipes (which are fetched from\n  //the smoothie.io databse).\n\n  render() {\n    const id = this.context.user ? this.context.user.id : 0;\n    const section = this.props.section || \"all\";\n    let recipes;\n    switch (section) {\n      case \"favorites\":\n        recipes = this.context.favorites;\n        break;\n\n      case \"user\":\n        recipes = this.context.recipesForUser(id);\n        break;\n\n      default:\n        recipes = this.context.recipes;\n    }\n\n    return (\n      <div className=\"HomePage\">\n        <main className=\"HomePage__Main\">\n          {!recipes ? (\n            <div className=\"Getting_Smoothies\">\n              <h3>getting smoothies...</h3>\n            </div>\n          ) : (\n            <HomePageDisplay\n              recipes={recipes}\n              section={section}\n              favorite={this.handleFavorite}\n            />\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import config from \"../config\";\n\nconst ReviewsApiService = {\n  getReviews(recipeId) {\n    return fetch(`${config.API_ENDPOINT}/recipes/${recipeId}/reviews`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  postReview(headline, review, recipe_id, user_id) {\n    return fetch(`${config.API_ENDPOINT}/users/reviews`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        headline,\n        review,\n        recipe_id,\n        user_id,\n      }),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default ReviewsApiService;\n","import React, { Component } from \"react\";\nimport \"./RecipePage.css\";\n\nclass RecipeDisplay extends Component {\n  render() {\n    const recipe = this.props.recipe || { recipe: \"loading\" };\n    const userData = recipe.user || { user_name: \"loading\" };\n    const smoothieData = recipe.smoothie || {\n      smoothie: \"loading\",\n      ingredients: [\"loading\"],\n    };\n    return (\n      <>\n        {!smoothieData ? (\n          <div>\n            <h1>loading...</h1>\n          </div>\n        ) : (\n          <section className=\"RecipePage__RecipeDisplay\">\n            <h1>{smoothieData.smoothie_name}</h1>\n            <h3>made by {userData.user_name}</h3>\n            <div className=\"RecipePage__RecipeDisplay__FlexBox\">\n              <img\n                src={smoothieData.smoothie_pic}\n                alt={`delicious smoothie named ${smoothieData.smoothie_name}`}\n              />\n              <div className=\"RecipeBox\">\n                <h3>Recipe</h3>\n                <ul>\n                  {smoothieData.ingredients.map((i) => (\n                    <>\n                      <li key={i.title}>\n                        {i.quantity} {i.units} {i.title}\n                      </li>\n                      <br />\n                    </>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default RecipeDisplay;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./RecipePage.css\";\n\nclass RecipeButtons extends Component {\n  static contextType = SmoothieContext;\n\n  render() {\n    const { recipe = {} } = this.props;\n    return (\n      <section className=\"RecipePage__BottomButtons\">\n        <div className=\"RecipePage__BottomButtons__FlexBox\">\n          {\"smoothie\" in recipe ? (\n            <>\n              <button\n                onClick={() => this.props.favorite(recipe.smoothie.recipe_id)}\n              >\n                favorite\n              </button>\n              <button>\n                <Link\n                  to={{\n                    pathname: `/create`,\n                    prepopulate: true,\n                    customId: `${recipe.smoothie.recipe_id}`,\n                  }}\n                >\n                  customize\n                </Link>\n              </button>\n              <button onClick={this.props.click}>\n                <Link\n                  to={{\n                    pathname: `/recipe/${recipe.smoothie.recipe_id}#ReviewForm`,\n                    reviewOn: true,\n                  }}\n                >\n                  review\n                </Link>\n              </button>\n            </>\n          ) : (\n            <>\n              <button>favorite</button>\n              <button>customize</button>\n              <button>review</button>\n            </>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default RecipeButtons;\n","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport ReviewsApiService from \"../../services/reviews-api-service\";\nimport \"./RecipePage.css\";\n\nclass ReviewForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showThanks: false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  //handleReviewSubmit sends the review to be posted in the smoothie.io\n  //database, then displays a thank you message for the user.\n\n  handleReviewSubmit = (event) => {\n    event.preventDefault();\n    const headline = event.target.headline.value;\n    const review = event.target.review.value;\n    const recipe_id = this.props.recipe.smoothie.recipe_id;\n    const user_id = this.props.recipe.user.user_id;\n    ReviewsApiService.postReview(headline, review, recipe_id, user_id);\n    this.handleSubmitTernary();\n  };\n\n  handleSubmitTernary = (event) => {\n    const showThanks = this.state.showThanks;\n    this.setState({\n      showThanks: !showThanks,\n    });\n  };\n\n  render() {\n    const showThanks = this.state.showThanks;\n    return (\n      <section className=\"RecipePage__ReviewForm\" id=\"ReviewForm\">\n        {showThanks ? (\n          <div className=\"TernaryBox\">\n            <h3>Thanks!</h3>\n            <h5>We appriciate your review.</h5>\n          </div>\n        ) : (\n          <form onSubmit={this.handleReviewSubmit}>\n            <label htmlFor=\"headline\">Add a headline</label>\n            <br />\n            <input\n              type=\"text\"\n              placeholder=\"What's most important to know?\"\n              size=\"33\"\n              name=\"headline\"\n              id=\"headline\"\n              required\n            />\n            <br />\n            <label htmlFor=\"review\">Write your review</label>\n            <br />\n            <textarea\n              placeholder='Was this smoothie \"yay\" or \"nay\"? Why?'\n              rows=\"10\"\n              cols=\"50\"\n              name=\"review\"\n              id=\"review\"\n              required\n            />\n            <br />\n            <button>submit</button>\n          </form>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default ReviewForm;\n","import React, { Component } from \"react\";\nimport \"./RecipePage.css\";\n\nclass ReviewBox extends Component {\n  render() {\n    const reviews = this.props.reviews || [\n      {\n        headline: \"loading\",\n        review: \"loading\",\n        user_pic: \"loading\",\n        user_name: \"loading\",\n      },\n    ];\n\n    //If there are no reviews for the recipe that is being viewed by the user,\n    //they will see a message saying that there are no reviews. Otherwise they\n    //will see the complete list of reviews as returned by the database.\n\n    return (\n      <section className=\"RecipePage__ReviewsBox\">\n        <h3>Reviews</h3>\n        {reviews.length === 0 ? (\n          <div className=\"TernaryBox\">\n            <h3>No reviews yet</h3>\n            <h5>Be the first to leave a review!</h5>\n            <button onClick={this.props.click}>review</button>\n          </div>\n        ) : (\n          reviews.map((r) => (\n            <div className=\"IndividualReviewBox\" key={r.headline}>\n              <div className=\"IndividualReviewBox__User\">\n                <img src={r.user_pic} alt={`avatar for ${r.user_name}`} />\n                <span>{r.user_name}</span>\n              </div>\n              <div className=\"IndividualReviewBox__Review\">\n                <h4>\"{r.headline}\"</h4>\n                <span>\"{r.review}\"</span>\n              </div>\n            </div>\n          ))\n        )}\n      </section>\n    );\n  }\n}\n\nexport default ReviewBox;\n","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport ReviewsApiService from \"../../services/reviews-api-service\";\nimport FavoritesApiService from \"../../services/favorites-api-service\";\nimport RecipeDisplay from \"./RecipeDisplay\";\nimport RecipeButtons from \"./RecipeButtons\";\nimport ReviewForm from \"./ReviewForm\";\nimport ReviewBox from \"./ReviewBox\";\nimport \"./RecipePage.css\";\n\nclass RecipePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm:\n        this.props.location && this.props.location.reviewOn\n          ? this.props.location.reviewOn\n          : false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  //Within the componentDidMount, the id for the recipe that is to be displayed is\n  //grabbed from the params of the props. Then two fetch requests are made: (1) to\n  //get the data for the recipe with the matching id, and (2) to get all the reviews\n  //for that recipe.\n\n  componentDidMount() {\n    const [recipeId] =\n      this.props &&\n      this.props.match &&\n      this.props.match.params.recipeId.split(\"#\")\n        ? this.props.match.params.recipeId.split(\"#\")\n        : [0];\n    Promise.all([\n      RecipesApiService.getRecipe(recipeId),\n      ReviewsApiService.getReviews(recipeId),\n    ]).then((data) => {\n      const recipe = data[0];\n      const reviews = data[1];\n      this.context.updateRecipe(recipe);\n      this.context.updateReviews(reviews);\n    });\n  }\n\n  handleFavorite = (recipe_id) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to add recipes to your favorites list!\");\n    } else {\n      FavoritesApiService.postFavorites(recipe_id, user_id).then((result) => {\n        console.log(result);\n      });\n    }\n  };\n\n  handleReviewButtonClick = (event) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to leave a review!\");\n    } else {\n      const showForm = this.state.showForm;\n      this.setState({\n        showForm: !showForm,\n      });\n    }\n  };\n\n  render() {\n    const recipe = this.context.recipe;\n    const reviews = this.context.reviews;\n    return (\n      <div className=\"RecipePage\">\n        <main className=\"RecipePage__Main\">\n          <RecipeDisplay recipe={recipe} />\n          <RecipeButtons\n            recipe={recipe}\n            click={this.handleReviewButtonClick}\n            favorite={this.handleFavorite}\n          />\n          {this.state.showForm && <ReviewForm recipe={recipe} />}\n          <ReviewBox reviews={reviews} click={this.handleReviewButtonClick} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default RecipePage;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport \"./CreatePage.css\";\n\nclass RecipeBox extends Component {\n  //State is being used to check if this component was accessed by the user through\n  //the clicking of one of the \"customize\" buttons. If that button is clicked, the\n  //user wants to edit an existing recipe, so their form is prepopulated with the\n  //data from the recipe they selected.\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prepopulate: this.props.location.prepopulate\n        ? this.props.location.prepopulate\n        : false,\n      thanks: false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  //handleRecipeSubmit sends a newly created recipe to the smoothie.io database\n  //then dsplays a thank you message for the user.\n\n  handleRecipeSubmit = (event) => {\n    event.preventDefault();\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to publish your recipe!\");\n    } else {\n      const smoothie_name = event.target.title.value;\n      const smoothie_pic = \"https://i.ibb.co/VSS1v7M/smoothie-art-png-tiny.png\";\n      const user_id = this.context.user.id;\n      const recipeArray = this.props.recipeArray;\n      if (recipeArray.length === 0) {\n        alert(\"Please add at least one ingredient before publishing!\");\n      } else if (!smoothie_name) {\n        alert(\"Please name your smoothie before publishing!\");\n      } else {\n        const ingredients = recipeArray.map((r) => {\n          delete r.title;\n          return r;\n        });\n        RecipesApiService.postRecipe(\n          smoothie_name,\n          smoothie_pic,\n          ingredients,\n          user_id\n        );\n        this.setState({ thanks: true });\n      }\n    }\n  };\n\n  render() {\n    const prepopulate = this.props.location.prepopulate;\n    const recipe = this.props.recipe;\n    const recipeArray = this.props.recipeArray || [];\n    return (\n      <>\n        {this.state.thanks ? (\n          <div className=\"thanksBox\">\n            <h2>Thank you!</h2>\n            <h3>We got your submission : )</h3>\n            <h4>\n              <Link to=\"/home\">Head back to all smoothies</Link>\n            </h4>\n          </div>\n        ) : (\n          <form onSubmit={this.handleRecipeSubmit} className=\"RecipeForm\">\n            <div className=\"RecipeTitle\">\n              <label htmlFor=\"title\"></label>\n              {prepopulate ? (\n                <input\n                  type=\"text\"\n                  placeholder={!recipe ? \"Loading..\" : recipe.smoothie_name}\n                  name=\"title\"\n                  id=\"title\"\n                  required\n                />\n              ) : (\n                <input\n                  type=\"text\"\n                  placeholder=\"My Awesome Smoothie\"\n                  name=\"title\"\n                  id=\"title\"\n                  required\n                />\n              )}\n              <br />\n              Name your smoothie!\n            </div>\n            <br />\n            <div className=\"Recipe__Box\">\n              {recipeArray.length === 0 ? (\n                <div className=\"Recipe__Item\">\n                  <h3>Add ingredients below to start making your recipe.</h3>\n                </div>\n              ) : (\n                recipeArray.map((r) => (\n                  <div className=\"Recipe__Item\" key={r.id}>\n                    <h3>\n                      {r.quantity} {r.units} {r.title}\n                    </h3>\n                    <button onClick={(e) => this.props.deleteRecipeLine(e, r)}>\n                      x\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n            <div className=\"Buttons__Box\">\n              <button type=\"submit\">publish</button>\n            </div>\n          </form>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(RecipeBox);\n","import config from \"../config\";\n\nconst IngredientsApiService = {\n  getIngredients() {\n    return fetch(`${config.API_ENDPOINT}/ingredients`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  postIngredient(title, category) {\n    return fetch(`${config.API_ENDPOINT}/ingredients`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        category,\n      }),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default IngredientsApiService;\n","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport IngredientsApiService from \"../../services/ingredients-api-service\";\nimport \"./CreatePage.css\";\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openCategory: null,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  componentDidMount() {\n    IngredientsApiService.getIngredients().then((ingredients) => {\n      this.context.updateIngredients(ingredients);\n    });\n  }\n\n  //changeAccordion toggles the state for the from (open or closed) of the category with the matching id\n\n  changeAccordion(event, id) {\n    event.preventDefault();\n    if (id === this.state.openCategory) {\n      this.setState({ openCategory: null });\n    } else {\n      this.setState({ openCategory: id });\n    }\n  }\n\n  //handleAddRecipeItem sends the data for a new recipe line to the parent component (CreatePage.js) to\n  //update state and display those changes in a sibling component (RecipeBox.js)\n\n  handleAddRecipeItem = (event) => {\n    event.preventDefault();\n    const title = event.target.title.value;\n    const ingredient_id = event.target.ingredient_id.value;\n    const quantity = event.target.quantity.value;\n    const units = event.target.units.value;\n    const newRecipeLine = { ingredient_id, title, quantity, units };\n    this.props.recipeLineDisplay(newRecipeLine);\n  };\n\n  render() {\n    const { openCategory } = this.state;\n    const ingredients = this.context.ingredients;\n    const categories = [...new Set(ingredients.map((i) => i.category))];\n    const ingredientsFor = (c) => ingredients.filter((i) => i.category === c);\n    return (\n      <div className=\"Ingredients__Box\">\n        <h3>Pick your ingreditents</h3>\n        <div className=\"Ingredients__List\">\n          {categories.map((c) => (\n            <div className=\"Ingredients__Category\" key={c}>\n              <button onClick={(event) => this.changeAccordion(event, c)}>\n                {c}\n              </button>\n              {c === openCategory &&\n                ingredientsFor(c).map((i) => (\n                  <div className=\"Ingredients__Item\" key={i.id}>\n                    <form\n                      className=\"accordionForm\"\n                      onSubmit={this.handleAddRecipeItem}\n                    >\n                      <span>{i.title}</span>\n                      <input\n                        type=\"hidden\"\n                        name=\"ingredient_id\"\n                        id=\"ingredient_id\"\n                        value={i.id}\n                      />\n                      <input\n                        type=\"hidden\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={i.title}\n                      />\n                      <input\n                        name=\"quantity\"\n                        id=\"quantity\"\n                        type=\"text\"\n                        placeholder=\"quantity\"\n                        size=\"7\"\n                        required\n                      />\n                      <input\n                        name=\"units\"\n                        id=\"units\"\n                        type=\"text\"\n                        placeholder=\"units\"\n                        size=\"4\"\n                      />\n                      <button className=\"add\">add</button>\n                    </form>\n                  </div>\n                ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport IngredientsApiService from \"../../services/ingredients-api-service\";\nimport \"./CreatePage.css\";\n\nclass AddNewIngredient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientSubmitted: false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  //handleAddNewItem submits a new ingredient to the smoothie.io database\n\n  handleAddNewItem = (event) => {\n    event.preventDefault();\n    const category = event.target.newItemCategory.value;\n    const title = event.target.newItemTitle.value;\n    IngredientsApiService.postIngredient(title, category);\n    this.setState({ ingredientSubmitted: true });\n  };\n\n  addAnother = (event) => {\n    event.preventDefault();\n    this.setState({ ingredientSubmitted: false });\n  };\n\n  render() {\n    const ingredients = this.context.ingredients;\n    const categories = [...new Set(ingredients.map((i) => i.category))];\n    return (\n      <>\n        {this.state.ingredientSubmitted ? (\n          <div>\n            <h1>Thanks!</h1>\n            <h3>We got your submission : )</h3>\n            <button onClick={this.addAnother}>add another</button>\n          </div>\n        ) : (\n          <form className=\"newIngredientForm\" onSubmit={this.handleAddNewItem}>\n            <label>Category:</label>\n            <select name=\"newItemCategory\">\n              {categories.map((i) => (\n                <option value={i}>{i}</option>\n              ))}\n            </select>\n            <br />\n            <br />\n            <label>Name:</label>\n            <input name=\"newItemTitle\" type=\"text\" placeholder=\"ie: starfuit\" />\n            <br />\n            <br />\n            <button>add</button>\n          </form>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AddNewIngredient;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport RecipeBox from \"./RecipeBox\";\nimport Accordion from \"./Accordion\";\nimport AddNewIngredient from \"./AddNewIngredient\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport RecipesApiService from \"../../services/recipes-api-service\";\nimport \"./CreatePage.css\";\n\nclass CreatePage extends Component {\n  //Within the state for this component, 'recipe' holds the data for a recipe already\n  //within the smoothie.io database, while 'recipeArray' holds objects that are created\n  //by the user when making a new recipe, or additions to an existing recipe. 'recipe'\n  //will only hold data if the user navigates to this component by clicking a \"customize\"\n  //button, signaling that they want to edit an existing smoothie rather than create one\n  //from sctatch.\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: {},\n      recipeArray: [],\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  componentDidMount() {\n    const recipeId = this.props.location.customId;\n    if (recipeId) {\n      RecipesApiService.getRecipe(recipeId).then((recipe) => {\n        this.context.updateRecipe(recipe);\n        this.setState({ recipe: recipe.smoothie });\n        this.setState({ recipeArray: recipe.smoothie.ingredients });\n      });\n    }\n  }\n\n  showNewItemForm = (event) => {\n    const user_id = this.context.user ? this.context.user.id : 0;\n    if (user_id === 0) {\n      alert(\"Please login to add new new ingredients to our database!\");\n    } else {\n      const showForm = this.state.showForm;\n      this.setState({\n        showForm: !showForm,\n      });\n    }\n  };\n\n  recipeLineDisplay = (newRecipeLine) => {\n    const recipeArray = this.state.recipeArray;\n    const newRecipeLines = recipeArray.concat(newRecipeLine);\n    this.setState({ recipeArray: newRecipeLines });\n  };\n\n  deleteRecipeLine = (event, recipeLine) => {\n    event.preventDefault();\n    this.setState({\n      recipeArray: this.state.recipeArray.filter((r) => r !== recipeLine),\n    });\n  };\n\n  render() {\n    const recipe = this.state.recipe;\n    const recipeArray = this.state.recipeArray;\n    return (\n      <div className=\"CreatePage\">\n        <main className=\"CreatePage__Main\">\n          <div className=\"CreatePage__Main__FlexBox\">\n            <RecipeBox\n              recipe={recipe}\n              recipeArray={recipeArray}\n              deleteRecipeLine={this.deleteRecipeLine}\n              recipeLineDisplay={this.recipeLineDisplay}\n            />\n            <Accordion recipeLineDisplay={this.recipeLineDisplay} />\n            <div className=\"Ingredients__AddNew\">\n              <h5>\n                Can't find your favorite ingredient? Click below to add it to\n                our database!\n              </h5>\n              <button onClick={this.showNewItemForm}>New Ingredient</button>\n              <br />\n              <br />\n              {this.state.showForm && <AddNewIngredient />}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreatePage);\n","import config from \"../config\";\n\nconst AuthApiService = {\n  getUsers() {\n    return fetch(`${config.API_ENDPOINT}/users`, {\n      headers: {},\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default AuthApiService;\n","import React, { Component } from \"react\";\nimport SmoothieContext from \"../../contexts/SmoothieContext\";\nimport \"./LoginPage.css\";\nimport AuthApiService from \"../../services/auth-api-service\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickedLogIn: false,\n    };\n  }\n\n  static contextType = SmoothieContext;\n\n  onLogin = (event) => {\n    event.preventDefault();\n    const user_name = event.target.user_name.value;\n    const password = event.target.password.value;\n    this.setState({ clickedLogIn: true });\n    AuthApiService.getUsers().then((users) => {\n      const userLog = users.filter(\n        (u) => u.user_name === user_name && u.password === password\n      );\n      const user = userLog[0];\n      if (!user) {\n        alert(\"incorrect username or password\");\n      } else {\n        this.context.logIn(user);\n        this.props.history.push(`/home`);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <main className=\"LoginPage__Main\">\n          {this.props.clickedLogIn ? (\n            <div className=\"Logging_In\">\n              <h3>logging in...</h3>\n            </div>\n          ) : (\n            <>\n              <h1>Login</h1>\n              <form onSubmit={this.onLogin}>\n                <label htmlFor=\"username\">username</label>\n                <br />\n                <input type=\"text\" name=\"user_name\" id=\"user_name\" required />\n                <br />\n                <label htmlFor=\"password\">password</label>\n                <br />\n                <input type=\"password\" name=\"password\" id=\"password\" required />\n                <br />\n                <br />\n                <button>submit</button>\n              </form>\n            </>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NotFoundPage.css\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div className=\"NotFoundPage\">\n        <main className=\"NotFoundPage__Main\">\n          <h1>404 Not Found</h1>\n          <h3>Sorry, this page doesn't exist!</h3>\n          <button>\n            <Link to=\"/home\">home</Link>\n          </button>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <nav className=\"Footer\">\n        <div className=\"Footer__Menu\">\n          <span>© Smoothie.io 2020. All rights reserved.</span>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport RecipePage from \"../RecipePage/RecipePage\";\nimport CreatePage from \"../CreatePage/CreatePage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport NotFoundPage from \"../NotFoundPage/NotFoundPage\";\nimport Footer from \"../Footer/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App__Header\">\n          <Header />\n        </header>\n        <main className=\"App__Main\">\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route\n              exact\n              path=\"/home/favorites\"\n              render={() => <HomePage section=\"favorites\" />}\n            />\n            <Route\n              exact\n              path=\"/home/my-recipes\"\n              render={() => <HomePage section=\"user\" />}\n            />\n            <Route path=\"/recipe/:recipeId\" component={RecipePage} />\n            <Route path=\"/create\" component={CreatePage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { SmoothieProvider } from \"./contexts/SmoothieContext\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/smoothie.io\">\n    <SmoothieProvider>\n      <App />\n    </SmoothieProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}